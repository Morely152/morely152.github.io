<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从CSDN提取文章为PDF</title>
    <link href="/2025/04/30/%E4%BB%8ECSDN%E6%8F%90%E5%8F%96%E6%96%87%E7%AB%A0%E4%B8%BAPDF/"/>
    <url>/2025/04/30/%E4%BB%8ECSDN%E6%8F%90%E5%8F%96%E6%96%87%E7%AB%A0%E4%B8%BAPDF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文摘自CSDN文章“# 【新】CSDN文章一键打印、输出PDF（自动阅读全文、全清爽模式）”，原文作者JavonPeng，原文链接[<a href="https://blog.csdn.net/p1279030826/article/details/106602341">https://blog.csdn.net/p1279030826/article/details/106602341</a>]</p></blockquote><h1 id="f12打开开发人员工具在控制台输入以下内容"><a class="markdownIt-Anchor" href="#f12打开开发人员工具在控制台输入以下内容"></a> F12打开开发人员工具，在控制台输入以下内容：</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-string">&#x27;use strict&#x27;</span>;<br><span class="hljs-keyword">var</span> articleBox = $(<span class="hljs-string">&quot;div.article_content&quot;</span>);<br>articleBox.<span class="hljs-title function_">removeAttr</span>(<span class="hljs-string">&quot;style&quot;</span>);<br>$(<span class="hljs-string">&quot;.hide-preCode-bt&quot;</span>).<span class="hljs-title function_">parents</span>(<span class="hljs-string">&quot;.author-pjw&quot;</span>).<span class="hljs-title function_">show</span>();<br>$(<span class="hljs-string">&quot;.hide-preCode-bt&quot;</span>).<span class="hljs-title function_">parents</span>(<span class="hljs-string">&quot;pre&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;set-code-hide&quot;</span>);<br>$(<span class="hljs-string">&quot;.hide-preCode-bt&quot;</span>).<span class="hljs-title function_">parents</span>(<span class="hljs-string">&quot;.hide-preCode-box&quot;</span>).<span class="hljs-title function_">hide</span>().<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;#btn-readmore&quot;</span>).<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;#side&quot;</span>).<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;.csdn-side-toolbar, .template-box, .blog-footer-bottom, .left-toolbox, .toolbar-inside&quot;</span>).<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;.comment-box, .recommend-box, .more-toolbox, .article-info-box, .column-group-item&quot;</span>).<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;aside, .tool-box, .recommend-nps-box, .skill-tree-box&quot;</span>).<span class="hljs-title function_">remove</span>();<br>$(<span class="hljs-string">&quot;main&quot;</span>).<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;display&#x27;</span>,<span class="hljs-string">&#x27;content&#x27;</span>); <br>$(<span class="hljs-string">&quot;main&quot;</span>).<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;float&#x27;</span>,<span class="hljs-string">&#x27;left&#x27;</span>); <br>$(<span class="hljs-string">&quot;#mainBox&quot;</span>).<span class="hljs-title function_">width</span>(<span class="hljs-string">&quot;100%&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;body&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">style</span>.<span class="hljs-property">zoom</span>=<span class="hljs-number">0.8</span>;<br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">print</span>();<br>&#125;)();<br></code></pre></td></tr></table></figure><p>会自动启动PDF打印机，设置相关参数然后保存即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CSDN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI大模型API调用的相关概念</title>
    <link href="/2025/04/26/AI%E5%A4%A7%E6%A8%A1%E5%9E%8BAPI%E8%B0%83%E7%94%A8%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <url>/2025/04/26/AI%E5%A4%A7%E6%A8%A1%E5%9E%8BAPI%E8%B0%83%E7%94%A8%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<blockquote><p>声明：本篇笔记由<strong>Grok3大模型</strong>生成。</p></blockquote><p>AI大模型的API调用是指通过应用程序编程接口（API）与大型人工智能模型（如语言模型、图像生成模型等）进行交互，以获取模型的推理结果或执行特定任务。以下是对相关概念的简洁介绍：</p><h3 id="1-什么是api调用"><a class="markdownIt-Anchor" href="#1-什么是api调用"></a> 1. <strong>什么是API调用？</strong></h3><p>API（Application Programming Interface）是一个中介接口，允许不同的软件系统相互通信。AI大模型的API调用是通过发送请求（通常是HTTP请求）到模型的服务器，传递输入数据（如文本、图像等），然后接收模型的输出（如生成文本、分类结果等）。</p><p><strong>流程示例</strong>：</p><ul><li>开发者发送一个包含输入文本的API请求（如“翻译这句话：Hello, world!”）。</li><li>模型服务器处理请求，调用AI模型进行推理。</li><li>服务器返回结果（如“¡Hola, mundo!”）。</li></ul><h3 id="2-ai大模型"><a class="markdownIt-Anchor" href="#2-ai大模型"></a> 2. <strong>AI大模型</strong></h3><p>AI大模型通常指参数量巨大（十亿到万亿级）的深度学习模型，如：</p><ul><li><strong>语言模型</strong>：如Grok、GPT、LLaMA，用于文本生成、翻译、问答等。</li><li><strong>多模态模型</strong>：如DALL·E、Stable Diffusion，支持文本到图像生成或图像处理。<br />这些模型通常部署在云端，因计算资源需求高，开发者通过API访问而非本地运行。</li></ul><h3 id="3-api调用相关概念"><a class="markdownIt-Anchor" href="#3-api调用相关概念"></a> 3. <strong>API调用相关概念</strong></h3><ul><li><strong>端点（Endpoint）</strong>：API的访问地址，通常是URL（如<code>https://api.x.ai/v1/model</code>）。</li><li><strong>请求（Request）</strong>：<ul><li><strong>方法</strong>：通常是POST或GET，POST用于发送复杂数据。</li><li><strong>参数</strong>：包括输入数据（如文本、提示词）、模型配置（如温度、最大输出长度）。</li><li><strong>认证</strong>：通过API密钥或令牌确保调用权限。</li></ul></li><li><strong>响应（Response）</strong>：<ul><li>通常以JSON格式返回，包含模型输出、状态码、错误信息等。</li><li>示例：<code>&#123;&quot;text&quot;: &quot;生成的回答&quot;, &quot;status&quot;: &quot;success&quot;&#125;</code>。</li></ul></li><li><strong>配额与计费</strong>：<ul><li>API调用通常有限额（如每月免费调用次数）。</li><li>按调用次数、输入/输出token数或计算资源计费。</li></ul></li><li><strong>延迟（Latency）</strong>：从发送请求到接收响应的时间，受模型大小和服务器负载影响。</li><li><strong>Token</strong>：<ul><li>许多语言模型按token（词或字符片段）计算输入和输出量。</li><li>例如，英文单词通常是1个token，中文字符可能是1-2个token。</li></ul></li></ul><h3 id="4-典型应用场景"><a class="markdownIt-Anchor" href="#4-典型应用场景"></a> 4. <strong>典型应用场景</strong></h3><ul><li><strong>文本生成</strong>：如自动撰写文章、生成代码。</li><li><strong>对话系统</strong>：构建聊天机器人。</li><li><strong>数据分析</strong>：处理文本分类、情感分析。</li><li><strong>多模态任务</strong>：生成图像、语音转文字等。</li></ul><h3 id="5-如何使用api调用"><a class="markdownIt-Anchor" href="#5-如何使用api调用"></a> 5. <strong>如何使用API调用</strong></h3><ol><li><strong>注册与获取API密钥</strong>：从服务提供商（如xAI、OpenAI）获取访问权限。</li><li><strong>阅读文档</strong>：了解API的端点、参数和限制。</li><li><strong>编写代码</strong>：使用编程语言（如Python）通过库（如<code>requests</code>）发送请求。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&quot;https://api.example.com/v1/model&quot;</span><br>headers = &#123;<span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">&quot;Bearer YOUR_API_KEY&quot;</span>&#125;<br>data = &#123;<span class="hljs-string">&quot;prompt&quot;</span>: <span class="hljs-string">&quot;Hello, world!&quot;</span>, <span class="hljs-string">&quot;max_tokens&quot;</span>: <span class="hljs-number">50</span>&#125;<br>response = requests.post(url, json=data, headers=headers)<br><span class="hljs-built_in">print</span>(response.json())<br></code></pre></td></tr></table></figure></li><li><strong>处理响应</strong>：解析返回的JSON数据，提取所需结果。</li></ol><h3 id="6-注意事项"><a class="markdownIt-Anchor" href="#6-注意事项"></a> 6. <strong>注意事项</strong></h3><ul><li><strong>成本管理</strong>：监控调用量，避免超预算。</li><li><strong>数据隐私</strong>：确保输入数据符合隐私政策，敏感数据需加密。</li><li><strong>错误处理</strong>：处理超时、配额超限等异常情况。</li><li><strong>模型选择</strong>：根据任务选择合适的模型（如小型模型速度快，大型模型效果好）。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Fluid个人博客网站搭建教程（一）：项目概述</title>
    <link href="/2025/04/19/Hexo-Fluid%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0/"/>
    <url>/2025/04/19/Hexo-Fluid%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<hr /><h1 id="一-什么是博客"><a class="markdownIt-Anchor" href="#一-什么是博客"></a> 一、什么是博客</h1><p><strong>博客(Blog)</strong> 就是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，集丰富多彩的个性化展示于一体的综合性平台。一个Blog其实就是一个网页，它通常是由简短且经常更新的帖子所构成，这些张贴的文章都按照年份和日期倒序排列，内容包括个人构想、日记、照片、诗歌、散文，甚至科幻小说发表或张贴。许多Blogs是个人心中所想之事情的发表，其它Blogs则是一群人基于某个特定主题或共同利益领域的集体创作。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[个人博客 - 百度百科](https://baike.baidu.com/item/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5466014)">[1]</span></a></sup><br />在学习编程的过程中，我们或许见到或使用过如下所示的网站：</p><ul><li><a href="https://www.csdn.net/">CSDN-专业开发者社区</a></li><li><a href="https://www.cnblogs.com/">博客园-开发者的网上家园</a></li></ul><p>这些平台以技术内容为核心，提供个人博客发布功能，用户可分享技术文章、开发经验、行业见解等，为IT行业的工作者和学生发布想法经验、寻求解决方案提供了便利。</p><h1 id="二-为什么要搭建个人博客"><a class="markdownIt-Anchor" href="#二-为什么要搭建个人博客"></a> 二、为什么要搭建个人博客</h1><p>现有博客平台的潜在问题：</p><ul><li>第三方平台可能随时调整政策（如审核机制、广告投放），导致文章被误删或限流。</li><li>若平台关停，用户内容可能无法迁移，导致博客文章丢失。</li><li>某些博客平台广告泛滥，且对部分资源强制要求付费查看，破坏互联网的分享和开源精神。</li></ul><p>搭建个人博客的益处：</p><ul><li>可实现独立域名，方便进行内容控制和品牌树立。</li><li>通过完整的搭建流程，丰富实践经历，有利于锻炼工程能力。</li><li>可将内容同步到多个博客平台，通过原文链接实现流量导回至个人博客。</li></ul><h1 id="三-如何搭建个人博客"><a class="markdownIt-Anchor" href="#三-如何搭建个人博客"></a> 三、如何搭建个人博客</h1><p>目前流行的个人博客搭建方案：</p><ul><li>静态网站生成器（适合开发者）</li><li>动态博客系统（适合非开发者或复杂需求）</li><li>无代码/低代码平台（适合技术小白）</li><li>云端托管方案（一站式解决方案）</li></ul><p>其中，”静态网站生成器“具有<strong>维护成本低、建站快速、模板化开发、自由度高</strong>等优势，成为一众开发者的选择。本教程将以 <strong><a href="https://hexo.io/docs/">Hexo框架</a> + <a href="https://hexo.fluid-dev.com/docs/start/">Fluid主题</a></strong> 为例，从环境配置开始，帮助读者搭建属于自己的博客网站。</p><blockquote><p><strong>Q1：什么是Hexo框架？</strong><br />Hexo 是一个基于<a href="https://nodejs.cn/">Node.js</a>的快速、简单且功能强大的博客框架。使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）写文章，Hexo 会在几秒钟内生成具有漂亮主题的静态文件。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Documentation | Hexo](https://hexo.io/docs/)">[2]</span></a></sup><br />Hexo支持多种风格的主题，支持功能丰富的插件，适合写技术博客;可托管在Github、Gitee等平台，部署与维护的成本非常低(几乎实现零成本)</p></blockquote><blockquote><p><strong>Q2：什么是Fluid主题？</strong><br />Fluid 是基于 Hexo 的一款 Material Design 风格的主题，由 <a href="https://github.com/fluid-dev">Fluid-dev (opens new window)</a>负责开发与维护。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[开始使用 | Hexo Fluid用户手册](https://hexo.fluid-dev.com/docs/start/)">[3]</span></a></sup><br />支持<strong>响应式布局</strong>，适配 PC、平板、手机等多种尺寸的屏幕，支持深色模式。</p></blockquote><p>博客成果示例：<a href="https://blog.morely.top/">陌离的个人博客</a></p><hr /><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5466014">个人博客 - 百度百科</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.io/docs/">Documentation | Hexo</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://hexo.fluid-dev.com/docs/start/">开始使用 | Hexo Fluid用户手册</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>个人博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web学习笔记(一)：HTML篇</title>
    <link href="/2025/04/17/Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AHTML%E7%AF%87/"/>
    <url>/2025/04/17/Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AHTML%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<blockquote><p>声明：本篇笔记摘自<a href="https://www.wenjingketang.com/bookinfo?book_id=9310">《Web前端技术 - 航空工业出版社》</a>，遵循<a href="https://creativecommons.org/licenses/by/4.0/legalcode.zh-hans">CC BY 4.0协议</a>。<br />存在由AI生成的小部分内容，仅供参考，请仔细甄别可能存在的错误。<br />由于技术的迭代，部分标签已被新版本的HTML弃用，本篇笔记对其中一些标注了(已废弃)字样，但可能存在误标、漏标等情况，请以最新标准为准。</p></blockquote><hr /><h1 id="一-html概述"><a class="markdownIt-Anchor" href="#一-html概述"></a> 一、HTML概述</h1><p><strong>HTML (HyperText Markup Language，超文本标记语言)</strong> 是用于创建和设计网页的标准标记语言。它通过一系列 <strong>标签(Tags)</strong> 定义网页的结构和内容，浏览器会解析这些标签并渲染成用户看到的页面。</p><h1 id="二-常用html标签"><a class="markdownIt-Anchor" href="#二-常用html标签"></a> 二、常用HTML标签</h1><h2 id="1基本结构"><a class="markdownIt-Anchor" href="#1基本结构"></a> 1.基本结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 文档类型声明 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>     <span class="hljs-comment">&lt;!-- HTML部分 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 网页头部 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 元数据，声明字符集 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 网页标题 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;shortcut icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;img/favicon.png&quot;</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 链接网页图标 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>     <span class="hljs-comment">&lt;!-- 网页主体部分 --&gt;</span><br><span class="hljs-comment">&lt;!-- 网页可见部分 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>使用规范专用、结构清晰的标签，可以方便搜索引擎整理网页内容，有利于信息检索。</p><h2 id="2常用标签"><a class="markdownIt-Anchor" href="#2常用标签"></a> 2.常用标签</h2><h3 id="1-文档标签"><a class="markdownIt-Anchor" href="#1-文档标签"></a> ① 文档标签</h3><ul><li><code>&lt;!DOCTYPE&gt;</code>：文档声明，<code>&lt;!DOCTYPE html&gt;</code>表明此文档使用H5标准。</li><li><code>&lt;html&gt;</code>：又称根标签，表明这是一个H5文档。</li><li><code>&lt;head&gt;</code>：标记文档头部，存储网页基本信息。<ul><li><code>&lt;meta&gt;</code>：元信息标签，用于设置描述和关键词，以便搜索引擎检索。<ul><li>字符集：<code>&lt;meta charset=&quot;utf-8&quot;&gt;</code> 定义网页使用utf-8字符集。</li><li>网页视口：<code>&lt;meta name=&quot;viewport&quot;&gt;</code> 设置视口高度、缩放比等，常用于在响应式设计中使网页适配移动端。</li></ul></li><li><code>&lt;title&gt;</code>：标记网页标题，显示在浏览器标签上。</li><li><code>&lt;link&gt;</code>：链接外部资源，规定了当前文档与某个外部资源的关系。<ul><li>链接图标：<code>&lt;link rel=&quot;shortcut icon&quot; href=&quot;img/favicon.png&quot;&gt;</code></li><li>链接CSS样式：<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;index.css&quot;&gt;</code></li></ul></li></ul></li><li><code>&lt;body&gt;</code>：标记文档主体，用于设置展示给用户的内容。</li></ul><h3 id="2-结构标签"><a class="markdownIt-Anchor" href="#2-结构标签"></a> ② 结构标签</h3><ul><li><code>&lt;header&gt;</code>：页眉标签，通常包含网站Logo、网页主导航和搜索框等。</li><li><code>&lt;nav&gt;</code>：导航标签，标记页面导航的链接组，如主菜单、侧边栏导航或者页内导航等。</li><li><code>&lt;article&gt;</code>：文章块标签，用于标记一块完整独立的内容，如文章、博客条目，用户评论。</li><li><code>&lt;section&gt;</code>：区块标签，用于标记文档中的节，从而对内容进行分区，如章节、页眉页脚。</li><li><code>&lt;aside&gt;</code>：附栏标签，用于标记引用内容、广告等与内容无关的部分。</li><li><code>&lt;footer&gt;</code>：页脚标签，用于标记文档或节的页脚，如友链、版权等信息。</li><li><code>&lt;div&gt;</code>：块级无语义容器，用于模块化布局。</li><li><code>&lt;span&gt;</code>：行内无语义标签，常用标记于文章标题下的作者、时间、地点等附属信息。</li></ul><p>★ 使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>简单网页示例<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 页眉部分 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的网站<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>关于我们<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>联系我们<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 主体内容 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 文章部分 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到我的博客<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>第一章：HTML 简介<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>HTML 是用于构建网页的标准标记语言。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>第二章：CSS 简介<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>CSS 用于控制网页的样式和布局。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>发布时间：<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2023年10月10日<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> | 作者：<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>张三<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 附栏部分 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>相关链接<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>HTML 教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>CSS 教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 页脚部分 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;copy;</span> 2023 我的网站. 版权所有.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>隐私政策<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>使用条款<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-文本标签"><a class="markdownIt-Anchor" href="#3-文本标签"></a> ③ 文本标签</h3><ul><li><code>&lt;h1&gt; ~ &lt;h6&gt;</code>：1级标题 ~ 6级标题，默认使文字加粗，字号依次减小。</li><li><code>&lt;p&gt;</code> (paragraph)：段落标签，用于标记段落文本，默认使用系统的字体字号。</li><li><code>&lt;strong&gt;</code>：强调标签，呈现<strong>粗体</strong>效果，语气较重。<ul><li><code>&lt;b&gt;</code>：只有加粗效果，无强调作用。</li></ul></li><li><code>&lt;em&gt;</code> (emphasis)：强调标签，呈现<em>斜体</em>效果，语气较轻。<ul><li><code>&lt;i&gt;</code>：只有斜体效果，无强调作用。</li></ul></li><li><code>&lt;sup&gt;</code>：标记上标，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>、注册商标<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mrow><mi>T</mi><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">^{TM}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span>。</li><li><code>&lt;sub&gt;</code>：标记下标，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>a</mi><mi>C</mi><msub><mi>O</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">CaCO_{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li><code>&lt;ins&gt;</code> (insert)：表示插入的文本，默认添加下划线样式。</li><li><code>&lt;del&gt;</code> (delete)：表示删除的文本，默认添加删除线样式。</li><li><code>&lt;abbr&gt;</code> (abbreviation)：标记简称或缩写词，鼠标悬停时使用气泡显示全称。<ul><li>如：<abbr text="Hypertext markup language">HTML</abbr>。</li></ul></li><li><code>&lt;br /&gt;</code>：实现文本换行，不建议大量使用。</li><li><code>&lt;hr /&gt;</code>：标记水平线。<ul><li>align属性：设置对齐方式，<strong>center 居中</strong> | left 左对齐 | right 右对齐</li><li>size属性：设置粗细，以像素(px)为单位，<strong>默认2px</strong>。</li><li>width属性：设置宽度，单位为px或%，<strong>默认100%</strong>。</li><li>color属性：设置颜色，可用颜色名、#RGB十六进制、(r, g, b)设置。</li></ul></li><li><code>&lt;dfn&gt;</code>：用于标记专用术语，默认添加斜体效果。</li><li><code>&lt;pre&gt;</code>：表示预定义格式文本，即保利原有的空格和换行。</li><li><code>&lt;code&gt;</code>：用于标记代码或文件名，一般包裹在<code>&lt;pre&gt;</code>标签中以保留原有的格式。</li></ul><h3 id="4-特殊字符转义"><a class="markdownIt-Anchor" href="#4-特殊字符转义"></a> ④ 特殊字符转义</h3><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">含义</th><th style="text-align:center">代码</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">空格</td><td style="text-align:center"><code>&amp;nbsp;</code></td><td style="text-align:center">Non-Breaking Space</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于号</td><td style="text-align:center"><code>&amp;lt;</code></td><td style="text-align:center">less than</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于号</td><td style="text-align:center"><code>&amp;gt;</code></td><td style="text-align:center">great than</td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center">逻辑与符号</td><td style="text-align:center"><code>&amp;amp;</code></td><td style="text-align:center">ampersand</td></tr><tr><td style="text-align:center">￥</td><td style="text-align:center">人民币符号</td><td style="text-align:center"><code>&amp;yen;</code></td><td style="text-align:center">类似拼音</td></tr><tr><td style="text-align:center">©</td><td style="text-align:center">版权符号</td><td style="text-align:center"><code>&amp;copy;</code></td><td style="text-align:center">copyright</td></tr><tr><td style="text-align:center">®</td><td style="text-align:center">注册商标符号</td><td style="text-align:center"><code>&amp;reg;</code></td><td style="text-align:center">register</td></tr><tr><td style="text-align:center">°</td><td style="text-align:center">度符号</td><td style="text-align:center"><code>&amp;deg;</code></td><td style="text-align:center">degree</td></tr><tr><td style="text-align:center">±</td><td style="text-align:center">正负号</td><td style="text-align:center"><code>&amp;plusmn;</code></td><td style="text-align:center">plus-minus</td></tr><tr><td style="text-align:center">×</td><td style="text-align:center">乘号</td><td style="text-align:center"><code>&amp;times;</code></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">÷</td><td style="text-align:center">除号</td><td style="text-align:center"><code>&amp;divide;</code></td><td style="text-align:center"></td></tr></tbody></table><h3 id="5-多媒体"><a class="markdownIt-Anchor" href="#5-多媒体"></a> ⑤ 多媒体</h3><ul><li><p>★ 路径表示法</p><ul><li>图片在同级目录下：<code>example.png</code></li><li>图片在下级目录下：<code>dic/example.png</code></li><li>图片在上级目录下：<code>../dic/example.png</code></li></ul></li><li><p>图片标签：<code>&lt;img src=&quot;路径&quot; alt=&quot;提示文本&quot; /&gt;</code></p><ul><li>src支持链接 JPEG 、 GIF 和 <code>PNG</code> 三种格式的图片</li></ul></li><li><p>音频标签：<code>&lt;audio src=&quot;路径&quot; controls=&quot;controls&quot;&gt;提示文本&lt;/audio&gt;</code></p><ul><li>controls属性：显示音频控件</li></ul></li><li><p>视频标签：<code>&lt;video src=&quot;路径&quot; controls=&quot;controls&quot;&gt;提示文本&lt;/video&gt;</code></p><ul><li>controls属性：显示视频控件</li></ul></li><li><p>流标签：<code>&lt;figure&gt;&lt;/figure&gt;</code></p><ul><li>表示页面中的一块独立的内容，表现为具有左右缩进的内容快。</li><li><code>&lt;figcaption&gt;</code>：嵌套在&lt;figure中标记流的标题，可以省略。</li></ul></li></ul><p>★ 使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">figure</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">figcaption</span>&gt;</span>流标题<span class="hljs-tag">&lt;/<span class="hljs-name">figcaption</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/p1.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;示例图片&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>流内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="6-列表"><a class="markdownIt-Anchor" href="#6-列表"></a> ⑥ 列表</h3><ul><li>无序列表：<ul></ul><ul><li>各级列表项前，默认分别显示实心圆、空心圆、实心方块图标。</li><li>也可通过<code>type= &quot;disc&quot; &quot;circle&quot; &quot;square&quot;</code> 强制指定序号样式。</li></ul></li><li>有序列表：<code>&lt;ol&gt;&lt;/ol&gt;</code>，具有以下属性：<ul><li><code>reversed=&quot;reversed&quot;</code>：降序排列(仅颠倒编号，各列表项内容不颠倒)。</li><li><code>start=&quot;1&quot;</code>：指定序号的起始值。</li><li><code>type=&quot;1&quot; &quot;A&quot; &quot;a&quot; &quot;I&quot; &quot;i&quot;</code>：指定序号的样式。</li></ul></li><li>自定义列表： <code>&lt;dl&gt;&lt;/dl&gt;</code><ul><li>使用 <code>&lt;dt&gt;&lt;/dt&gt;</code> 标记列表标题</li><li>使用 <code>&lt;dd&gt;&lt;/dd&gt;</code> 标记列表内容</li></ul></li><li>列表项：<code>&lt;li&gt;&lt;/li&gt;</code>，与<code>&lt;ol&gt;</code>相似，具有以下属性：<ul><li><code>value=&quot;1&quot;</code>：指定当前项的序号，并使之后的列表项重新编号。</li><li><code>type=&quot;1&quot; &quot;A&quot; &quot;a&quot; &quot;I&quot; &quot;i&quot;</code>：指定序号的样式。</li></ul></li></ul><p>★ 使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;disc&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>无序列表第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">reversed</span>=<span class="hljs-string">&quot;reversed&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;A&quot;</span>&gt;</span>有序列表第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>有序列表第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span>   <span class="hljs-comment">&lt;!-- 自定义列表中可以有多个标题，列表项没有项目符号，也不强调次序 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span> 自定义列表标题<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>自定义列表第一项<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>自定义列表第二项<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>自定义列表标题<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>自定义列表项目<span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7-超链接"><a class="markdownIt-Anchor" href="#7-超链接"></a> ⑦ 超链接</h3><ul><li><code>&lt;a href=&quot;目标地址&quot;&gt; 载体 &lt;/a&gt;</code><ul><li>href属性：必须设置，若暂时未确定地址，用href=&quot;#&quot;将链接置空。</li><li>target属性：<strong>self 当前窗口打开</strong> | blank 新窗口打开</li><li>download属性：指定资源的文件名，并且强制浏览器执行下载操作(仅Chrome和FIreFox支持)。</li></ul></li><li>锚点链接：设置某个标签的id属性，将链接的href属性设置为<code>href=&quot;#id名称&quot;</code>，可以创建一个锚点。用户点击链接时会自动跳转到指定id所在的标签处。</li><li>电子邮件链接：<code>href = &quot;mainto:电子邮件地址?subject=邮件主题&quot;</code></li><li>图像热点链接：在一张图片上根据坐标分别设置不同区域的超链接。步骤如下：<ul><li>在图片标签<code>&lt;img /&gt;</code>下添加一个<code>&lt;map&gt;</code>标签，其name属性为图片的id，表示添加图像热点链接的作用区域</li><li>在<code>&lt;map&gt;</code>标签中添加几个<area>标签，使用下列属性设置热点链接：<ul><li>shape：circle 圆形 | rect 矩形 | poly 多边形</li><li>coords：关键点的坐标，参数如下：<ul><li>circle形状：coords = “圆心x, 圆心y，半径”</li><li>rect形状：coords = “左上顶点x, 左上顶点y, 右下顶点x, 右下顶点y”</li><li>poly形状：coords = “顶点1x, 顶点1y, 顶点2x, 顶点2y, …”</li></ul></li></ul></li></ul></li></ul><p>★ 使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;img/p1.png&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">pic_dog</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 简单的超链接示例 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/p1.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;小狗&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>点击预览<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#pic_dog&quot;</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 锚点示例：点击跳转到小狗图片 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>查看图片<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/main.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;动物大全&quot;</span>  <span class="hljs-attr">usermap</span>=<span class="hljs-string">&quot;#map&quot;</span>/&gt;</span>  <span class="hljs-comment">&lt;!-- 图像热点链接 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">map</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;map&quot;</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 属性值应与usermap的值相同 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">area</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">coords</span>=<span class="hljs-string">&quot;88, 77, 63&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;img/dogs.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;小狗&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">area</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;rect&quot;</span> <span class="hljs-attr">coords</span>=<span class="hljs-string">&quot;26, 190, 151, 357&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;img/cats.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;小猫&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">map</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="8-表格"><a class="markdownIt-Anchor" href="#8-表格"></a> ⑧ 表格</h3><ul><li>基本结构<ul><li><code>&lt;table&gt;</code>：标记表格。</li><li><code>&lt;caption&gt;</code>：标记表格的标题。</li><li><code>&lt;tr&gt;</code>：标记表格中的一行。</li><li><code>&lt;th&gt;</code>：包含在<code>&lt;tr&gt;</code>中，标记表头内容，默认加粗居中。</li><li><code>&lt;td&gt;</code>：包含在<code>&lt;tr&gt;</code>中，标记普通内容，默认不加粗左对齐。</li></ul></li><li>表格分组<ul><li>按行分组：<ul><li><code>&lt;thead&gt;</code>：标记表头部分(<code>&lt;th&gt;</code>标记的是表头的一格)。</li><li><code>&lt;tbody&gt;</code>：标记表体部分。</li><li><code>&lt;tfoot&gt;</code>：标记表尾部分。</li></ul></li><li>按列分组：<ul><li><code>&lt;col&gt;</code>：包含在<code>&lt;table&gt;</code>中，通过 <code>span属性</code> 设置每组的列数。</li></ul></li></ul></li><li>常用属性<ul><li>整体边框<ul><li>设置<code>&lt;table&gt;</code>的 <code>border属性</code>，单位为px。</li></ul></li><li>单元格的内外边距<ul><li>内边距(内容 - 边框)：设置<code>&lt;table&gt;</code>的 <code>cellpadding属性</code>，单位为px。</li><li>外边距(边框 - 边框)：设置<code>&lt;table&gt;</code>的 <code>cellspacing属性</code>，单位为px。</li><li>图示：<br /><img src="Web%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%A0%B7%E5%BC%8F-20250316074722163.png" alt="" /><ul><li>这两个属性不常在HTML中使用(已过时),而是使用CSS中的<code>border-spacing</code>属性。</li></ul></li></ul></li><li>表格内外边距（外遵框架frame，内守规矩rulles）<ul><li>表格内边框：设置<code>&lt;table&gt;</code>的 <code>rules属性</code>(已废弃) ，取值如下：<ul><li>none：不显示内边框</li><li>all：显示所有边框</li><li>groups：只显示分组的边框</li><li>rows：显示行之间的边框</li><li>cols：显示列之间的边框</li></ul></li><li>表格外边框：设置<code>&lt;table&gt;</code>的 <code>frame属性</code>(已废弃) ，取值如下：<ul><li>void：不显示外边框</li><li>box、boder：显示所有外边框</li><li>above：显示上边框</li><li>below：显示下边框</li><li>lhs：显示左外边框</li><li>rhs：显示有外边框</li><li>hsides：(horizon sides)显示上下边框</li><li>vsides：(vertical sides)显示左右边框</li></ul></li></ul></li><li>单元格跨行、跨列<ul><li>跨行：设置<code>&lt;th&gt;</code>或<code>&lt;td&gt;</code>的rowspan属性，值为跨行数。</li><li>跨列：设置<code>&lt;th&gt;</code>或<code>&lt;td&gt;</code>的colspan属性，值为跨列数。</li></ul></li></ul></li></ul><p>★ 使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">rules</span>=<span class="hljs-string">&quot;all&quot;</span>&gt;</span>      <span class="hljs-comment">&lt;!-- 以1px显示所有外边框 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>表格标题<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">col</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c1&quot;</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>     <span class="hljs-comment">&lt;!-- 垂直分组：第一组占一列 --&gt;</span>                <br><span class="hljs-tag">&lt;<span class="hljs-name">col</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c2&quot;</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>     <span class="hljs-comment">&lt;!-- 垂直分组：第二组占三列 --&gt;</span><br><span class="hljs-comment">&lt;!-- 水平分组：表头部分 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头第一格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头第二格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头第三格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表头第四格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 水平分组：表体部分 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-comment">&lt;!--跨行内容--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>内容(1,1)<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>(占两行)<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(1,2)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(1,3)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(1,4)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(2,2)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(2,3)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(2,4)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>内容(3,1)<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(3,2)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(3,3)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>内容(3,4)<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 水平分组：表尾部分 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tfoot</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>表尾第一格<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-comment">&lt;!--跨列内容--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>表尾第二格(占三列)<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tfoot</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>★ 表格效果：</p><table border="1" rules="all">      <!-- 以1px显示所有外边框 --><caption>表格标题</caption><col class="c1" span="1" />     <!-- 垂直分组：第一组占一列 -->                <col class="c2" span="3" />     <!-- 垂直分组：第二组占三列 --><!-- 水平分组：表头部分 --><thead><tr><th>表头第一格</th><th>表头第二格</th><th>表头第三格</th><th>表头第四格</th></tr></thead><!-- 水平分组：表体部分 --><tbody><tr><!--跨行内容--><th rowspan="2">内容(1,1)<br/>(占两行)</th><td>内容(1,2)</td><td>内容(1,3)</td><td>内容(1,4)</td></tr><tr><td>内容(2,2)</td><td>内容(2,3)</td><td>内容(2,4)</td></tr><tr><th>内容(3,1)</th><td>内容(3,2)</td><td>内容(3,3)</td><td>内容(3,4)</td></tr></tbody><!-- 水平分组：表尾部分 --><tfoot><tr><th>表尾第一格</th><!--跨列内容--><th colspan="3">表尾第二格(占三列)</th></tr></tfoot></table><h3 id="9-表单"><a class="markdownIt-Anchor" href="#9-表单"></a> ⑨ 表单</h3><ul><li>基本组成：表单域、表单控件、提交按钮、提示信息。<br /><img src="Web%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%A0%B7%E5%BC%8F-20250317192024390.png" alt="" /><ul><li>表单域：网页中放置表单控件与提示信息的区域，用于采集用户输入信息并传输到服务器。<ul><li><code>&lt;form action=&quot;提交地址&quot; method=&quot;提交方式&quot;&gt;&lt;/form&gt;</code>（form标签不可互相嵌套。）<ul><li>action属性：表示数据提交的地址，一般是一个URL，开发初期可使用#占位置空。</li><li>method属性：提交表单数据的方式，默认为get，一般使用post。</li><li>name属性：表单的名称。</li><li>autocomplete属性：自动记录并弹出历史记录。取值： <strong>on</strong> | off</li><li>novalidate属性：值为novalidate，若设置则不会对输入的内容进行检查。</li><li>enctype属性：设置数据发送到服务器时的编码类型，取值：<ul><li><strong>application/x-www-form-urlencoded</strong>：表示对所有字符编码再传输，会导致大文件传输效率降低。</li><li>mutipart/formdata：表示传输的数据为二进制类型。</li><li>text/plain：表示传输纯文本，不编码特殊字符，但是空格转换为加号“+”。</li></ul></li><li>target属性：表示表单数据提交地址的打开方式，取值：<strong>self 当前窗口打开</strong> | blank 新窗口打开</li></ul></li></ul></li><li>提交按钮：用于用户确定信息填写完毕后将其传输至服务器。</li><li>提示信息：提示用户输入信息的内容和类型。</li><li>常用表单控件：提供表单功能，如文本框、按钮、单/复选框、搜索框等。<ul><li><code>&lt;input type=&quot;text&quot; /&gt;</code>：单行文本框，用于输入简短的文本，如账号密码。</li><li><code>&lt;input type=&quot;password&quot; /&gt;</code>：密码文本框，会隐藏输入的内容，显示黑色圆点。</li><li><code>&lt;input type=&quot;radio&quot; /&gt;</code>：单选框，用于单项选择，如性别、年级等。</li><li><code>&lt;input type=&quot;checkbox&quot; /&gt;</code>：复选框，用于多项选择(也可以单选)，如兴趣爱好爱好。</li><li><code>&lt;input type=&quot;button&quot; /&gt;</code>：普通按钮，用于标记可单机的按钮，通过value属性可设置按钮内容。<ul><li>作用同<code>&lt;button&gt;</code>标签，后者可嵌入文本、图像等内容，同时拥有更丰富的样式。</li></ul></li><li><code>&lt;input type=&quot;submit&quot; /&gt;</code>：提交按钮，用于提交用户输入的数据，默认内容为“提交”。</li><li><code>&lt;input type=&quot;reset&quot; /&gt;</code>：重置按钮，用于清空表单中的数据，默认内容为“重置”。</li><li><code>&lt;input type=&quot;image&quot; /&gt;</code>：图像形式的提交按钮，使用图像代替普通提交按钮样。</li><li><code>&lt;input type=&quot;file&quot; /&gt;</code>：文件域，包含一个“选择文件”的按钮和表示选中文件的文本，用户单机按钮可选择文件上传。</li><li><code>&lt;input type=&quot;email&quot; /&gt;</code>：邮箱地址文本框，支持验证邮箱格式正确性，并提示错误信息。</li><li><code>&lt;input type=&quot;url&quot; /&gt;</code>：地址文本框，支持验证URL格式正确性，并提示错误信息。</li><li><code>&lt;input type=&quot;tel&quot; /&gt;</code>：电话号码文本框，通过pattern属性设置正则表达式限制输入格式。</li><li><code>&lt;input type=&quot;search&quot; /&gt;</code>：搜索框，能够记录输入的字符，作为网站搜索的关键词。</li><li><code>&lt;input type=&quot;number&quot; /&gt;</code>：数值文本框，只能输入数字，支持设置max,min,step,value属性限制输入内容的边界、间隔和默认值。</li><li><code>&lt;input type=&quot;range&quot; /&gt;</code>：数值范围滑块，将数值文本框显示为滑动条控件。</li><li><code>&lt;input type=&quot;date&quot; /&gt;</code>：日期时间文本框，可通过设置type来控制时间的精度：date(天) | week(周) | month（月） | time(分钟)</li></ul></li><li>其他表单控件：<ul><li><code>&lt;textarea clos=&quot;列数&quot; rows=&quot;行数&quot; palcehoder=“提示信息”&gt;</code>：文本区域(支持输入多行文本，类似于留言板)</li><li><code>&lt;select size=&quot;选项个数&quot; mutiple=&quot;mutiple&quot;&gt;&lt;option&gt;选项一&lt;/option&gt;&lt;option&gt;选项二&lt;/option&gt;&lt;option&gt;选项三&lt;/option&gt;&lt;/select&gt;</code>:选择框(下拉列表)<ul><li>若为select设置mutiple属性，则选项会按多行显示，且支持按Ctrl多选</li><li>若为option设置selected属性，默认选中此选项</li><li>若选项较多，可使用<code>&lt;optgroup label=&quot;组名&quot;&gt;&lt;/optgroup&gt;</code>包含多个<code>&lt;option&gt;</code>标签，进行选项分组</li></ul></li><li>数据列表：支持用户输入关键词匹配选项，同时也支持用户直接选择列表中的选项，格式如下：</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;类型&quot;</span> <span class="hljs-attr">list</span>=<span class="hljs-string">&quot;列表名称&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">datalist</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;列表名称&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;说明内容1&quot;</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span> <span class="hljs-comment">&lt;!-- 说明内容不会被填入输入框 ---&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;说明内容2&quot;</span>&gt;</span>选项2<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;/<span class="hljs-name">datalist</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center"><strong>上述代码效果说明</strong></th><th style="text-align:center"><strong>图示</strong></th></tr></thead><tbody><tr><td style="text-align:center">支持用户选择选项</td><td style="text-align:center"><img src="Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%EF%BC%9AHTML%E7%AF%87-20250417194505881.png" alt="" /></td></tr><tr><td style="text-align:center">支持用户输入匹配</td><td style="text-align:center"><img src="Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%EF%BC%9AHTML%E7%AF%87-20250417194717055.png" alt="" /></td></tr><tr><td style="text-align:center">说明文字不会被填入输入框</td><td style="text-align:center"><img src="Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%EF%BC%9AHTML%E7%AF%87-20250417194750834.png" alt="" /></td></tr></tbody></table><ul><li>常用表单属性</li></ul><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">name</td><td style="text-align:center">自定义</td><td style="text-align:center">表单控件的名称</td></tr><tr><td style="text-align:center">value</td><td style="text-align:center">自定义</td><td style="text-align:center">表单控件的默认值</td></tr><tr><td style="text-align:center">readonly</td><td style="text-align:center">readonly</td><td style="text-align:center">表单控件不可编辑修改</td></tr><tr><td style="text-align:center">disabled</td><td style="text-align:center">disabled</td><td style="text-align:center">禁用该表单控件（显示为灰色）</td></tr><tr><td style="text-align:center">checked</td><td style="text-align:center">checked</td><td style="text-align:center">该项默认选中（单选钮或复选框）</td></tr><tr><td style="text-align:center">autocomplete</td><td style="text-align:center">on/off</td><td style="text-align:center">自动完成功能</td></tr><tr><td style="text-align:center">autofocus</td><td style="text-align:center">autofocus</td><td style="text-align:center">自动获取焦点</td></tr><tr><td style="text-align:center">form</td><td style="text-align:center"><code>&lt;form&gt;</code>的id属性值</td><td style="text-align:center">指定控件所属表单</td></tr><tr><td style="text-align:center">placeholder</td><td style="text-align:center">字符串</td><td style="text-align:center">显示在输入型文本框中的输入提示</td></tr><tr><td style="text-align:center">required</td><td style="text-align:center">required</td><td style="text-align:center">该表单控件不可为空</td></tr><tr><td style="text-align:center">pattern</td><td style="text-align:center">字符串(正则表达式)</td><td style="text-align:center">验证输入内容的模式</td></tr></tbody></table><ul><li>提示信息：<code>&lt;label for=&quot;目标控件id&quot;&gt;提示信息&lt;/label&gt;</code><ul><li>用于单选/复选框选择钮后的文字说明，或按钮中的文字(如：○ <strong>18岁以下</strong>)</li><li>点击提示信息也能够激活对应的控件，有利于优化用户体验</li></ul></li><li>表单对象分组：<code>&lt;fieldset&gt;</code><ul><li>格式：</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs HTML">    <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>账号：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>密码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%EF%BC%9AHTML%E7%AF%87-20250417200335718.png" alt="" /></p><hr /><p>★ 常用表单标签使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>会员信息表<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>基本信息<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>昵称：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;idc&quot;</span>&gt;</span>头像：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;idc&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>其他信息<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>性别：<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;nan&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nan&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rad&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;nv&quot;</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nv&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rad&quot;</span> /&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>兴趣：<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;chang&quot;</span>&gt;</span>唱歌<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chang&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chb&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;tiao&quot;</span>&gt;</span>跳舞<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tiao&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chb&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;dong&quot;</span>&gt;</span>运动<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dong&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chb&quot;</span> /&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;gq&quot;</span>&gt;</span>个性签名：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;gq&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;40&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>★显示效果<br /><img src="Web%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)%EF%BC%9AHTML%E7%AF%87-20250417200631467.png" alt="" /></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Web</category>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>十九岁的栈帧：回溯那些改变我人生的函数调用</title>
    <link href="/2025/04/15/%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/"/>
    <url>/2025/04/15/%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><img src="birthday.jpg" alt="" /><br />从2022年写出第一个程序到现在，也有三四个年头了。今天是我的十九岁生日，也正好借此机会，回顾一下我走上编程这条路的过程和经历。</p><hr /><p>第一次见到代码，好像还是在我初中那会儿，有次在跟QQ上的网友玩一个投骰子的游戏，群里有个大佬说他会拿Python写一个骰子，然后给出了类似于下面的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ramdom<br>a = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p>现在看来这个程序很简单，只是单纯地输出一个1-6之间的随机整数，但当时给了我不小的震撼：“三行字(当时甚至不知道这个叫代码)就可以让电脑给我一个随机的数字！”</p><p>震撼之余跟大佬聊了很久，也从此对<code>Python</code>这么个编程语言有了初识。</p><hr /><p>转眼之间到了高中，高一开学的时候发了本《信息技术》教材，长这个样子：<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414093627575.png" alt="" /></p><p>当我看到这一页时，发现了一个熟悉的身影 – Python（命运的齿轮开始悄然转动…）</p><p><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414094019127.png" alt="" /></p><p>理所当然地，我开始对Python产生了较为浓厚的兴趣，并且开始尝试学习和编写程序。<br />但是那个时候，还处于一个门都没摸到的境界，学什么，怎么学都是问题。<br />好在互联网和网络上的各路大佬给了我指导。通过搜索，得到了一些学习渠道：</p><ul><li><a href="https://www.w3school.com.cn/python/index.asp">W3school - Python教程</a></li><li><a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?vd_source=a1d64ca1ba2129f594954cdd4e9c4db4">黑马程序员 - # 8天python从入门到精通</a></li><li><a href="https://zhuanlan.zhihu.com/p/665135869">《Python编程：从入门到实践》</a></li></ul><p>最初我在W3school上，认识了Python中的变量与字符串、列表这些概念，进而开始读《Python编程：从入门到实践》这本书，一直学到了字典；这时我发现靠自学有些吃力，于是开始借助一些视频课程进行深入理解，如上面的黑马以及《Python编程：从入门到实践》的配套视频。</p><p>然而，还有一个问题困扰着我：没有手机电脑的情况下，如何进行编程实践？<br />那时候家里只有一台智慧屛设备(如下图所示)，其中有一个网页浏览器可以打开一些小型的网站。<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414095403963.png" alt="" /></p><p>于是我开始寻找一些在线的编程环境，最终选择了这一款：</p><p><a href="www.onlinegdb.com">OnlineGDB</a><br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414101915980.png" alt="" /></p><p>这个平台支持代码云保存、一键分享等功能，也是我亲测好用且推荐使用的一款在线IDE。通过这个平台，我对Python进行了一定的实践练习，也为我理解编程打下了较为坚实的基础。</p><p>这是几个当年写的小程序，已经上传到我的<a href="https://github.com/Morely152/CULP">GitHub仓库</a>：</p><ul><li>2022年8月：鸡兔同笼问题<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414110705783.png" alt="" /></li><li>2022年11月：BMI计算器<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414110916845.png" alt="" /></li><li>2023年1月：当时看<a href="https://www.bilibili.com/video/BV1z7411e7qB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=a1d64ca1ba2129f594954cdd4e9c4db4">B站UP主&quot;毕导THU&quot;的视频</a>，模拟了视频中提到的红包金额分配算法<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414111010544.png" alt="" /></li></ul><hr /><p>到这里，已经基本学习了Python的列表、字典、函数等简单语法，我开始尝试使用这些语法编写更长更复杂的程序，并将相关文章发布到了<a href="https://blog.csdn.net/mo_li_2892197119?spm=1000.2115.3001.5343">CSDN</a>:</p><ul><li>2023.06.06：<a href="https://blog.csdn.net/mo_li_2892197119/article/details/131060909?spm=1001.2014.3001.5501">&quot;老李算法&quot;随机抽号程序</a></li><li>2023.06.16：<a href="https://blog.csdn.net/mo_li_2892197119/article/details/131248621?spm=1001.2014.3001.5501">&quot;顺手牵羊&quot;Python小游戏</a></li><li>2023.12.31：<a href="https://blog.csdn.net/mo_li_2892197119/article/details/135318063?spm=1001.2014.3001.5501">“卖榴莲”问题的过程模拟</a></li><li>2024.02.13：<a href="https://blog.csdn.net/mo_li_2892197119/article/details/135318063?spm=1001.2014.3001.5501">Python决策小游戏</a></li></ul><p>家里一众长辈都觉得我适合从事医生、会计、公务员等职业，对我选择计算机专业一致表示担忧和否定(出于某些原因，我没有告诉他们我已经进行了初步的入门学习)；即使如此，我还是坚持选择了这个专业和这门行业。我开始探索计算机专业需要具备的知识和授课的内容，在2023年的暑假开始了计算机科学知识的学习：</p><ul><li><a href="https://www.bilibili.com/video/av21376839/?vd_source=a1d64ca1ba2129f594954cdd4e9c4db4">计算机科学速成课 - 哔哩哔哩</a></li><li><a href="https://www.ituring.com.cn/book/1139">《计算机是怎样跑起来的》- 图灵社区</a></li><li><a href="https://www.ituring.com.cn/book/details/1136">《程序是怎样跑起来的》- 图灵社区</a></li></ul><p>通过学习较为底层的知识，我理解了内存是如何存储数据的，CPU是怎样执行命令和处理数据的等一系列问题，不仅让我有了更专业正确的编程思维，也让我在进入大学之后学习《计算机导论》这门课程更更加轻松。</p><hr /><p>高考结束后，我在填报志愿时选择了计算机科学与技术这一专业进行学习，并且很幸运地被分数线较高的一所大学录取，开启了专业学习程序设计的生涯。</p><p>高考结束的暑假，在我哥的指导和AI的帮助下，开发了一款Windows系统进程守护工具(<a href="https://github.com/Morely152/Windows_progress_guard">点击访问GitHub仓库</a>)<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414114727509.png" alt="“进程守护工具”界面效果" /></p><hr /><p>感谢那个一往无前的自己，刚进入大学时，由于大部分初级知识(C语言、计导等)都提前学习过，我没有在学业上感到很大的压力，顺利结束了大一上学期的学习。</p><p>在大一上学期的期末，我开始了第二个软件(<a href="https://docs.qq.com/aio/DTXhHcmF4cFdiaWVs?p=5PkhMQNLMYURZMuKOtTPNI">《番茄魔方》时间管理工具</a>)的设计，并且在寒假期间完成了测试版的制作和发布，软件更新持续至今，项目代码已经突破5k行。<br /><img src="%E5%8D%81%E4%B9%9D%E5%B2%81%E7%9A%84%E6%A0%88%E5%B8%A7%EF%BC%9A%E5%9B%9E%E6%BA%AF%E9%82%A3%E4%BA%9B%E6%94%B9%E5%8F%98%E6%88%91%E4%BA%BA%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-20250414114516350.png" alt="《番茄魔方》界面效果" /></p><hr /><p>回望过去，我与编程的相遇源于Python，也正是写下的第一行<code>print(&quot;hello world&quot;)</code>，将我带入了一个兼具创意与严谨的崭新世界。<strong>如果将人生看作最终指向<code>return 0</code>的程序，我的人生就已经写下了长长短短的19行。从最初的<code>Hello world</code>到现在的<code>Hello coder</code>，在一条初心不换的道路上，做不负星光的赶路人;矢志前行，终见曙光。</strong></p>]]></content>
    
    
    <categories>
      
      <category>碎碎念</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JSON保存设置项异常复原问题</title>
    <link href="/2025/02/10/JSON%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E9%A1%B9%E5%BC%82%E5%B8%B8%E5%A4%8D%E5%8E%9F%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/10/JSON%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E9%A1%B9%E5%BC%82%E5%B8%B8%E5%A4%8D%E5%8E%9F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一-问题概述"><a class="markdownIt-Anchor" href="#一-问题概述"></a> 一、问题概述：</h1><p>在WPF项目中新建了文件Settings.json，用于保存开机自启动的设置记录，并将其属性设置为“内容–始终复制”以将JSON文件添加到项目文件夹中。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;AutoStartEnabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>定义了下面的方法来载入设置的内容：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LoadSettings</span>()</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (File.Exists(SettingsFilePath))<br>    &#123;<br>        <span class="hljs-built_in">string</span> json = File.ReadAllText(SettingsFilePath);<br>        <span class="hljs-built_in">dynamic</span> settings = JsonConvert.DeserializeObject(json);<br>        AutoStartEnabled = settings.AutoStartEnabled;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-comment">// 如果文件不存在，初始化默认设置</span><br>        AutoStartEnabled = <span class="hljs-literal">false</span>;<br>    &#125;   <br>&#125;<br></code></pre></td></tr></table></figure><ul><li>运行程序，发现每次启动时，通过UI反馈的记录均为False，即使手动修改为True也会在运行的一瞬间变成False。</li></ul><hr /><h1 id="二-寻找原因"><a class="markdownIt-Anchor" href="#二-寻找原因"></a> 二、寻找原因：</h1><ul><li>手动修改为True扔不起效，可排除保存记录异常的情况。</li><li>怀疑是UI控件初始属性为False导致，查找之后未发现异常。</li><li>通过断点追踪，发现在程序读取JSON文件内容之前就已经变成了false。</li><li>又怀疑是程序在初始化时触发了按钮的取消选中事件，但未触发断点，可以排除。</li><li>这时突然想起“内容–始终复制”的属性，问题原因终于找到了。</li></ul><hr /><h1 id="三-问题复现"><a class="markdownIt-Anchor" href="#三-问题复现"></a> 三、问题复现</h1><ul><li>选中按钮后，修改JSON中&quot;AutoStartEnabled&quot;的值为True。</li><li>再次启动程序时，“始终复制”的属性使得开发环境中的Settings.json复制到编译后的程序所在的文件夹，将修改了的Json文件覆盖，造成属性异常变成False的假象。</li></ul><hr /><h1 id="四-解决问题"><a class="markdownIt-Anchor" href="#四-解决问题"></a> 四、解决问题</h1><ul><li>直接从源头解决问题，将开发环境中的json文件删除，杜绝文件被覆盖的可能性。</li><li>经过测试，现有方法支持在未找到json文件时创建文件，因此不需添加新建Json文件的程序。</li></ul><hr /><h1 id="五-回顾反思"><a class="markdownIt-Anchor" href="#五-回顾反思"></a> 五、回顾反思</h1><ul><li>通过测试发现，直接从文件夹启动编译后的程序不会出现覆盖的问题，证实了前面的分析。</li><li>能被这种小问题困扰如此之久，反映出自己对开发工具的不熟悉和思维深度的不足，也提示自己要通过积极寻找问题来积累自己的经验。</li></ul>]]></content>
    
    
    <categories>
      
      <category>踩坑记录</category>
      
      <category>WPF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Visual Studio</tag>
      
      <tag>WPF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OBS Studio录屏声音异常发闷问题</title>
    <link href="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<hr /><p>在使用OBS进行录屏时，发现声音失真发闷现象很严重。<br />上网查询，得到以下原因及解决方案，建议逐个排查：</p><h2 id="1输入设备选择了蓝牙耳机耳机使用麦克风录音导致音质变差"><a class="markdownIt-Anchor" href="#1输入设备选择了蓝牙耳机耳机使用麦克风录音导致音质变差"></a> 1.输入设备选择了蓝牙耳机，耳机使用麦克风录音导致音质变差</h2><p>原贴链接：<a href="https://www.zhihu.com/question/340185115">打开 OBS Studio 后播放音乐音质差如何解决？-知乎</a><br />解决方案：将输入设备全部禁用，或者留一个电脑自带的麦克风阵列</p><p><img src="OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205223911572.png" alt="" /></p><hr /><h2 id="2-系统扬声器开启了音频增益"><a class="markdownIt-Anchor" href="#2-系统扬声器开启了音频增益"></a> 2. 系统扬声器开启了音频增益</h2><p>原贴链接：<a href="https://www.bilibili.com/opus/827471891323158578">[首发] OBS音频很闷得慌的解决办法 -哔哩哔哩</a><br />解决方案：关闭音频增益</p><p><img src="OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224201021.png" alt="" /></p><hr /><h2 id="3开启了杜比音效"><a class="markdownIt-Anchor" href="#3开启了杜比音效"></a> 3.开启了杜比音效</h2><p>原帖链接:<a href="https://blog.lifewith.fun/zh-cn/">为什么OBS录制视频的声音发闷 -MystCastle的博客</a><br />解决方案：关闭杜比音效<br /><img src="OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224514227.png" alt="" /></p><hr /><h2 id="4默认输入设备和通信设备不正确"><a class="markdownIt-Anchor" href="#4默认输入设备和通信设备不正确"></a> 4.默认输入设备和通信设备不正确</h2><p>看评论区有人说要把默认的输入设备和通信设备都换成麦克风阵列，不能用蓝牙耳机<br />解决方案：<br /><img src="OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224858254.png" alt="" /><br /><img src="OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205225019769.png" alt="" /><br />在我的电脑上，进行到这一步时，声音基本与关闭OBS时一致，失真发闷问题得到解决。</p>]]></content>
    
    
    <categories>
      
      <category>踩坑记录</category>
      
      <category>OBS Studio</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OBS Studio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>音频无法播放：局部变量与类字段的混淆和滥用问题</title>
    <link href="/2025/02/05/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/05/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一-问题概述"><a class="markdownIt-Anchor" href="#一-问题概述"></a> 一、问题概述</h1><p>在 <code>WPF</code> 中，试图通过 <code> NAudio</code> 库实现多音轨音频播放时，程序运行之后不能听到声音。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> NAudio.Wave;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> *** <span class="hljs-comment">// 省略</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MainWindow</span> : <span class="hljs-title">Window</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> AudioManager audioManager = <span class="hljs-keyword">new</span> AudioManager();<br>        <span class="hljs-comment">// 其他部分省略</span><br><br>       <span class="hljs-comment">// 软件启动时，主页窗口初始化</span><br>       <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WindowLoaded</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, RoutedEventArgs e</span>)</span><br>       &#123;<br>           <span class="hljs-comment">// 加载白噪音资源</span><br>           <span class="hljs-keyword">var</span> audioManager = <span class="hljs-keyword">new</span> AudioManager();<br>           audioManager.AddPlayer(<span class="hljs-string">&quot;***&quot;</span>);<br>           audioManager.AddPlayer(<span class="hljs-string">&quot;***&quot;</span>);<br>       &#125;<br><br><span class="hljs-comment">// 音频资源管理</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioManager</span><br>&#123;<br><span class="hljs-keyword">private</span> List&lt;AudioPlayer&gt; _players = <span class="hljs-keyword">new</span> List&lt;AudioPlayer&gt;();<br><span class="hljs-comment">// 添加音源</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddPlayer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath</span>)</span><br>&#123;<br><span class="hljs-keyword">try</span><br>&#123;<br><span class="hljs-keyword">var</span> player = <span class="hljs-keyword">new</span> AudioPlayer(filePath);<br>_players.Add(player);<br>Debug.WriteLine(<span class="hljs-string">$&quot;已添加播放器，当前总数：<span class="hljs-subst">&#123;_players.Count&#125;</span>&quot;</span>);<br>Debug.WriteLine(<span class="hljs-string">$&quot;索引：<span class="hljs-subst">&#123;_players.IndexOf(player)&#125;</span>&quot;</span>);<br>&#125;<br><span class="hljs-keyword">catch</span> (Exception ex)<br>&#123;<br>Debug.WriteLine(<span class="hljs-string">$&quot;添加播放器失败: <span class="hljs-subst">&#123;ex.Message&#125;</span>&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 整体播放</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">PlayAll</span>()</span><br>&#123;<br>Debug.WriteLine(<span class="hljs-string">$&quot;PlayAll 调用时列表长度: <span class="hljs-subst">&#123;_players.Count&#125;</span>&quot;</span>); <span class="hljs-comment">// 新增日志</span><br><span class="hljs-built_in">int</span> Cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> player <span class="hljs-keyword">in</span> _players)<br>&#123;<br>player.Play();<br>Cnt++;<br>&#125;<br>Debug.WriteLine(<span class="hljs-string">$&quot;已播放所有音源，总数：<span class="hljs-subst">&#123;Cnt&#125;</span>&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioPlayer</span><br>&#123;<br><span class="hljs-keyword">private</span> WaveOutEvent _waveOut;<br><span class="hljs-keyword">private</span> AudioFileReader _audioFile;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AudioPlayer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath</span>)</span><br>&#123;<br>_audioFile = <span class="hljs-keyword">new</span> AudioFileReader(filePath);<br>_waveOut = <span class="hljs-keyword">new</span> WaveOutEvent();<br>_waveOut.Init(_audioFile);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Play</span>()</span> =&gt; _waveOut.Play();<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Pause</span>()</span> =&gt; _waveOut.Pause();<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Stop</span>()</span> =&gt; _waveOut.Stop();<br><span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> Volume<br>&#123;<br><span class="hljs-keyword">get</span> =&gt; _audioFile.Volume;<br><span class="hljs-keyword">set</span> =&gt; _audioFile.Volume = <span class="hljs-keyword">value</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>通过 <code>Debug.WriteLine</code> 方法输出的调试信息：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">已添加播放器，当前总数：1</span><br><span class="hljs-attribute">索引：0</span><br><span class="hljs-attribute">已添加播放器，当前总数：2</span><br><span class="hljs-attribute">索引：1</span><br><span class="hljs-attribute">PlayAll 调用时列表长度</span><span class="hljs-punctuation">:</span> <span class="hljs-string">0</span><br>已播放所有音源，总数：0<br></code></pre></td></tr></table></figure><p>发现在添加了两个文件的情况下，调用<code>PlayAll</code>时列表长度却是<code>0</code>而不是预期的<code>2</code>。此前，在使用如下方法播放单个音频时：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioManager</span><br>&#123;<br><span class="hljs-comment">//其他方法同上</span><br><span class="hljs-comment">// 独立播放</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Play</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> index</span>)</span><br>&#123;<br>_players[index].Play();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后通过<code>audioManager.Play(0)</code>播放列表的第一个音频文件时，编译器报错：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">System.ArgumentOutOfRangeException:“<span class="hljs-built_in">Index</span> was <span class="hljs-keyword">out</span> of <span class="hljs-built_in">range</span>. Must be non-negative and less than the <span class="hljs-built_in">size</span> of the collection. ”<br></code></pre></td></tr></table></figure><p>即索引超出列表范围，一度让我百思不得其解……</p><hr /><h1 id="二-寻找原因"><a class="markdownIt-Anchor" href="#二-寻找原因"></a> 二、寻找原因</h1><p>询问AI后，提示我问题很可能出在 <strong><code>_players</code> 列表未被正确填充</strong>，导致 <code>PlayAll()</code> 循环时列表为空(这也与我的预期相符)，并给出如下检查思路：</p><ol><li><strong>确认 <code>AddPlayer</code> 方法是否被正确调用</strong></li><li><strong>检查 <code>AudioPlayer</code> 构造函数是否失败</strong></li><li><strong>确认 <code>_players</code> 列表的作用域和生命周期</strong></li><li><mark><strong>检查<code>AudioManager</code>实例是否唯一</strong></mark></li><li><strong>验证文件路径和权限</strong></li></ol><ul><li>最开始我考虑了文件加载失败的情况，但是在尝试了使用绝对路径以及将属性修改为资源或者内容之后，没有报告找不到文件的错误，似乎可以排除这种情况。</li><li>然后我想到是不是有可能多次初始化了<code>_players</code>列表，导致其意外清空？<ul><li>查找代码中出现<code>_players</code>的语句，似乎只有一次初始化，可以排除这种情况。</li><li><img src="%E6%9C%AA%E5%91%BD%E5%90%8D-20250205124929280.png" alt="" /></li></ul></li><li>最后我突然想到，在页面初始化时似乎将<code>AudioManager</code>类实例化了一次，但是在后面的代码中好像也看到了类似的<code>new</code>语句，是不是多次实例化了<code>AudioManager</code>呢？<ul><li>查找代码中的<code>new AudioManager()</code>语句，果然查到了两次：</li><li><img src="%E6%9C%AA%E5%91%BD%E5%90%8D-20250205125110116.png" alt="" /></li></ul></li></ul><blockquote><p>[!INFO] 根据上述分析，问题出现在多次实例化<code>AudioManager</code>类:</p><ol><li>在<code>MainWindow</code>类中，实例化了一次，在这里是一个类字段，属于 <code>MainWindow</code> 类的成员变量，生命周期与 <code>MainWindow</code> 实例相同。</li><li>在<code>WindowLoaded</code>事件中，又实例化了一次。在这里是一个局部变量 <code>audioManager</code>，它的作用域仅限于该方法内部。当方法执行完毕后，局部变量会被销毁。</li></ol></blockquote><blockquote><p>诊断结果：<strong>对 <code>audioManager</code> 的添加和读取操作不是同一个对象</strong>。</p></blockquote><ul><li>具体解释：<ul><li>在 <code>WindowLoaded</code> 方法中调用 <code>AddPlayer</code> 时，操作的是局部变量 <code>audioManager</code>。</li><li>尝试在其他地方（如按钮点击事件）调用 <code>PlayAll</code> 时，操作的是类字段的 <code>audioManager</code>。</li><li>由于局部变量和类字段是两个不同的对象，局部变量中添加的音源不会影响类字段的 <code>audioManager</code>，因此 <code>PlayAll</code> 时列表为空，无法播放。</li></ul></li></ul><hr /><h1 id="三-解决问题"><a class="markdownIt-Anchor" href="#三-解决问题"></a> 三、解决问题</h1><p>删去<code>WindowLoaded</code>中的局部变量，直接使用生命周期更长的类字段，程序运行之后成功输出了音频。</p><hr /><h1 id="四-反思总结"><a class="markdownIt-Anchor" href="#四-反思总结"></a> 四、反思总结</h1><p><strong>关键陷阱：局部变量覆盖类字段</strong></p><blockquote><p>在 C# 中，如果方法内部声明了一个与类字段同名的局部变量，编译器会优先使用局部变量，导致类字段被“隐藏”。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">private</span> AudioManager audioManager = <span class="hljs-keyword">new</span> AudioManager();<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SomeMethod</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> audioManager = <span class="hljs-keyword">new</span> AudioManager(); <span class="hljs-comment">// 这里实际是一个局部变量</span><br>    audioManager.AddPlayer(<span class="hljs-string">&quot;xxx&quot;</span>);         <span class="hljs-comment">// 操作的是局部变量，而非类字段</span><br>&#125;<br></code></pre></td></tr></table></figure><p>直接使用类字段，可以确保所有操作都作用于同一个 <code>AudioManager</code> 实例，从而解决播放失败的问题。</p><blockquote><p>[!NOTE]- 局部变量＆类字段：如何进行取舍？</p><ul><li>![[音频无法播放：局部变量与类字段的混淆和滥用问题-20250205132505196.png|622]]</li><li>使用类字段：<ul><li>数据需要长期存在：变量需要在整个类的生命周期内保持状态，或在多个方法间共享。</li><li>资源需要全局访问：某些对象（如数据库连接、网络客户端）需要被多个方法重复使用。</li><li>需要维护对象状态：对象的状态（如播放进度、配置参数）需要在多次调用中持续更新。</li></ul></li><li>使用局部变量：<ul><li>临时计算或中间结果：变量仅在一次方法调用中临时使用，无需长期保存。</li><li>避免副作用：希望方法的行为纯粹，不依赖或修改类的状态。</li><li>限制作用域以提高安全性：防止变量被意外修改（如敏感数据）。</li></ul></li></ul></blockquote><p>反思：出现这样的问题，主要在于对面向对象编程的认识和经验不足，对面向过程变成有较大的惯性思维，习惯将初始化操作写在页面加载的事件中。</p>]]></content>
    
    
    <categories>
      
      <category>踩坑记录</category>
      
      <category>WPF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>版本控制工具Git</title>
    <link href="/2024/09/02/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7Git/"/>
    <url>/2024/09/02/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7Git/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇笔记摘自<a href="https://www.bilibili.com/video/BV1HM411377j/?spm_id_from=333.1387.homepage.video_card.click">【GeekHour】一小时Git教程_哔哩哔哩</a></p></blockquote><hr /><h1 id="一-概述"><a class="markdownIt-Anchor" href="#一-概述"></a> 一、概述</h1><h2 id="1git是一个免费开源的分布式版本控制系统使用仓库一种数据库记录文件变化"><a class="markdownIt-Anchor" href="#1git是一个免费开源的分布式版本控制系统使用仓库一种数据库记录文件变化"></a> 1.Git是一个免费开源的分布式版本控制系统，使用仓库(一种数据库)记录文件变化</h2><p><img src="Pasted-image-20240618140433.png" alt="" /></p><h2 id="2版本控制系统跟踪文件变化分为集中式和分布式两种"><a class="markdownIt-Anchor" href="#2版本控制系统跟踪文件变化分为集中式和分布式两种"></a> 2.版本控制系统：跟踪文件变化，分为集中式和分布式两种</h2><h3 id="1集中式如svn"><a class="markdownIt-Anchor" href="#1集中式如svn"></a> ①集中式(如SVN)</h3><p><img src="Pasted-image-20240618140732.png" alt="" /></p><ul><li>文件保存在中央服务器上，修改时先下载最新版本再上传</li><li>优点：使用简单</li><li>缺点：中央服务器或网络故障时，客户无法工作</li></ul><h3 id="2分布式如git"><a class="markdownIt-Anchor" href="#2分布式如git"></a> ②分布式(如Git)</h3><p><img src="Pasted-image-20240618141111.png" alt="" /></p><ul><li>版本库在每个用户上，进行本地修改，分享式再同步仓库</li><li>优点：免费开源，速度快，功能强大，支持离线工作，分支管理强大</li></ul><hr /><h1 id="二-git的安装与配置"><a class="markdownIt-Anchor" href="#二-git的安装与配置"></a> 二、Git的安装与配置</h1><h2 id="1网址git官网下载地址"><a class="markdownIt-Anchor" href="#1网址git官网下载地址"></a> 1.网址：<a href="https://git-scm.com/downloads">Git官网下载地址</a></h2><h2 id="2安装后检查版本"><a class="markdownIt-Anchor" href="#2安装后检查版本"></a> 2.安装后检查版本</h2><blockquote><p>git -v</p></blockquote><ul><li>回显<code>git version 2.45.2.windows.1</code></li></ul><h2 id="3打开终端"><a class="markdownIt-Anchor" href="#3打开终端"></a> 3.打开终端</h2><p>在任意文件夹中右键鼠标，选择菜单栏中的<code>Open Git Bash Here</code>，即可打开Git的控制台，默认路径为当前文件夹。</p><h2 id="4使用git"><a class="markdownIt-Anchor" href="#4使用git"></a> 4.使用Git</h2><p>常见使用方法：</p><ul><li>命令行：基本常用的方式，在终端中输入命令控制</li><li>图形化界面：即GUI</li><li>IDE插件/拓展：常用<br />常用命令：<br /><img src="Git-Cheet-Sheet-ByGeekHour.png" alt="" /></li></ul><h2 id="5配置git"><a class="markdownIt-Anchor" href="#5配置git"></a> 5.配置Git</h2><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">命令</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">配置用户名</td><td style="text-align:center"><code>git config --global user.name 用户名</code></td><td style="text-align:center">用户名是多个单词时用引号括起来</td></tr><tr><td style="text-align:center">配置邮箱</td><td style="text-align:center"><code>git config --global user.email 邮箱</code></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">保存配置</td><td style="text-align:center"><code>git config --global credential.helper store</code></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">查看配置</td><td style="text-align:center"><code>git config --global --list</code></td><td style="text-align:center"></td></tr></tbody></table><ul><li><code>--local</code>：本地配置，只对本地仓库有效</li><li><code>--global</code>：全局配置，对所有仓库有效（常用）</li><li><code>--system</code>：系统配置，对所有用户有效（少用）</li></ul><hr /><h1 id="三-新建版本库仓库"><a class="markdownIt-Anchor" href="#三-新建版本库仓库"></a> 三、新建版本库（仓库）</h1><h2 id="1版本库"><a class="markdownIt-Anchor" href="#1版本库"></a> 1.版本库</h2><ul><li>又叫仓库(Repository,Repo)，相当于一个由Git管理的文件目录，</li><li>Git能跟踪和管理其中每个文件的修改和增删</li></ul><h2 id="2创建仓库"><a class="markdownIt-Anchor" href="#2创建仓库"></a> 2.创建仓库</h2><h3 id="方式一本地创建git-init"><a class="markdownIt-Anchor" href="#方式一本地创建git-init"></a> 方式一：本地创建(Git init)</h3><p><strong>创建</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> 仓库名<br><span class="hljs-built_in">cd</span> 仓库名<br>git init<br></code></pre></td></tr></table></figure><p><strong>检验仓库是否创建</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -a <br></code></pre></td></tr></table></figure><p>回显<code>./  ../  .git/</code>表示仓库已创建</p><h3 id="方式二从远程服务器克隆git-clone"><a class="markdownIt-Anchor" href="#方式二从远程服务器克隆git-clone"></a> 方式二：从远程服务器克隆(Git clone)</h3><ul><li>使用**<code>git clone</code>命令**从github或者gitee上克隆已经存在的仓库<ul><li><code>git clone 仓库地址</code></li></ul></li><li>回显<code>Cloning into 'remote-repo'...</code></li></ul><hr /><h1 id="四-工作区域和文件状态"><a class="markdownIt-Anchor" href="#四-工作区域和文件状态"></a> 四、工作区域和文件状态</h1><h2 id="1工作区域"><a class="markdownIt-Anchor" href="#1工作区域"></a> 1.工作区域</h2><p><img src="Pasted-image-20240630144908.png" alt="" /></p><ul><li>工作区(working directory)、工作目录<ul><li>如文件资源管理器中的文件夹</li></ul></li><li>暂存区(staging area)、索引(index)<ul><li>用于保存即将提交到仓库的修改内容</li></ul></li><li>本地仓库(local repository)<ul><li>用命令创建的仓库</li><li>包含了完整的项目历史和元数据</li></ul></li><li>修改工作区文件–添加文件到暂存区–提交到本地仓库<ul><li>整个过程中可以用git命令来查看、比较或者撤销修改</li><li>类似于工厂生产–货车转运–仓库储存的过程</li></ul></li></ul><h2 id="2文件状态"><a class="markdownIt-Anchor" href="#2文件状态"></a> 2.文件状态</h2><p><img src="Pasted-image-20240630145735.png" alt="" /></p><ul><li>未跟踪(untracked):未被git管理的文件</li><li>未修改(unmodified):已被管理但未变化</li><li>已修改(modified):已经修改但未暂存</li><li>已暂存(staged):已修改且已暂存</li></ul><hr /><h1 id="五-添加和提交文件"><a class="markdownIt-Anchor" href="#五-添加和提交文件"></a> 五、添加和提交文件</h1><h2 id="1添加文件"><a class="markdownIt-Anchor" href="#1添加文件"></a> 1.添加文件</h2><ul><li><p>使用vs code添加：</p><ul><li>在“源代码管理”中打开仓库文件夹</li><li>直接在文件夹里新建文件</li></ul></li><li><p>使用Linux命令：</p><ul><li><img src="Pasted-image-20240630205042.png" alt="" /></li></ul></li><li><p>使用cat 文件名的命令浏览文件：</p><ul><li><img src="Pasted-image-20240630205314.png" alt="" /></li></ul><h2 id="2git-status命令查看仓库状态"><a class="markdownIt-Anchor" href="#2git-status命令查看仓库状态"></a> 2.git status命令：查看仓库状态</h2></li></ul><blockquote><p>git status</p></blockquote><ul><li>回显：<ul><li>（未进行任何操作的空仓库）<br /><img src="Pasted-image-20240630150449.png" alt="" /></li><li>（添加文件后的仓库）<br /><img src="Pasted-image-20240630205501.png" alt="" /><ul><li>出现了未跟踪的文件file1.txt</li></ul></li></ul></li></ul><h2 id="3git-add命令将文件添加到暂存区"><a class="markdownIt-Anchor" href="#3git-add命令将文件添加到暂存区"></a> 3.git add命令：将文件添加到暂存区</h2><p><img src="Pasted-image-20240630205747.png" alt="" /></p><ul><li>目标文件从红色变成绿色，表明文件已处于已暂存状态</li></ul><table><thead><tr><th style="text-align:left">相关命令</th><th style="text-align:left">作用描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>git rm --cached 已暂存文件</code></td><td style="text-align:left">取消暂存指定的文件</td></tr><tr><td style="text-align:left"><code>git add 文件名</code></td><td style="text-align:left">添加指定名称的文件</td></tr><tr><td style="text-align:left"><code>git add *.文件格式</code></td><td style="text-align:left">添加文件夹中特定文件格式的所有文件</td></tr><tr><td style="text-align:left"><code>git add .</code></td><td style="text-align:left">添加文件夹中所有的文件</td></tr></tbody></table><h2 id="4git-commit命令将暂存区的文件提交到仓库"><a class="markdownIt-Anchor" href="#4git-commit命令将暂存区的文件提交到仓库"></a> 4.git commit命令：将暂存区的文件提交到仓库</h2><p><img src="Pasted-image-20240703151346.png" alt="" /></p><ul><li>使用<code>git commit -m &quot;附加信息&quot;</code>的命令来将暂存区的文件提交到仓库</li></ul><h2 id="5git-log命令查看提交记录"><a class="markdownIt-Anchor" href="#5git-log命令查看提交记录"></a> 5.git log命令：查看提交记录</h2><p><img src="Pasted-image-20240703152923.png" alt="" /></p><hr /><h1 id="六-版本回退"><a class="markdownIt-Anchor" href="#六-版本回退"></a> 六、版本回退</h1><h2 id="1git-reset的三种形式"><a class="markdownIt-Anchor" href="#1git-reset的三种形式"></a> 1.git reset的三种形式</h2><table><thead><tr><th style="text-align:center">形式</th><th style="text-align:center">回退版本</th><th style="text-align:center">保留工作区</th><th style="text-align:center">保留暂存区</th><th>场景or区别</th></tr></thead><tbody><tr><td style="text-align:center"><code>git reset --soft</code></td><td style="text-align:center">〇</td><td style="text-align:center">〇</td><td style="text-align:center">〇</td><td>无需添加到暂存区</td></tr><tr><td style="text-align:center"><code>git reset --hard</code></td><td style="text-align:center">〇</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td>放弃修改内容，谨慎使用！</td></tr><tr><td style="text-align:center"><code>git reset --mixed</code></td><td style="text-align:center">〇</td><td style="text-align:center">〇</td><td style="text-align:center">×</td><td>需要git add再提交</td></tr></tbody></table><ul><li><code>上述命令 + 历史版本ID</code>：回退到指定版本</li><li><code>上述命令 + head^</code>：回退到上个版本</li><li>如果不慎误操作，可以使用<code>git reflog</code>查看以往版本的版本号，然后再git reset即可恢复</li></ul><hr /><h1 id="七-查看文件在不同区域-版本之间的差异"><a class="markdownIt-Anchor" href="#七-查看文件在不同区域-版本之间的差异"></a> 七、查看文件在不同区域、版本之间的差异</h1><h2 id="1git-diff命令"><a class="markdownIt-Anchor" href="#1git-diff命令"></a> 1.git diff命令：</h2><ul><li>比较文件在工作区与暂存区之间的差异<br /><img src="Pasted-image-20240703224932.png" alt="" /><br />（输入;q退出vim编辑器）</li><li>输出空行表示无差异</li><li>其他diff命令：(命令后加文件名可指定比较某文件的差异)<ul><li><code>git diff HEAD</code>：比较文件在工作区与版本库之间的差异</li><li><code>git diff --cache</code>：比较文件在暂存区与版本库之间的差异</li><li><code>git diff 版本ID_1 版本ID_2</code>：比较两个指定版本之间的差异</li><li><code>git diff HEAD~n HEAD</code>：比较之前第n个版本与当前版本的差异，n可省略</li><li><code>git diff 分支名_1 分支名_2</code>：比较两个指定分支之间的差异</li></ul></li></ul><hr /><h1 id="八-删除文件"><a class="markdownIt-Anchor" href="#八-删除文件"></a> 八、删除文件</h1><h2 id="1直接将文件移动到回收站然后添加到暂存区并提交"><a class="markdownIt-Anchor" href="#1直接将文件移动到回收站然后添加到暂存区并提交"></a> 1.直接将文件移动到回收站，然后添加到暂存区并提交</h2><p><img src="Pasted-image-20240708231557.png" alt="" /></p><h2 id="2git-rm-命令同时删除工作区和暂存区的文件"><a class="markdownIt-Anchor" href="#2git-rm-命令同时删除工作区和暂存区的文件"></a> 2.git rm 命令：同时删除工作区和暂存区的文件</h2><p><img src="Pasted-image-20240708233026.png" alt="" /></p><ul><li>命令<code>git rm --cached 文件名</code>可以只删除暂存区的文件，保留工作区的文件</li></ul><hr /><h1 id="九-gitignore文件"><a class="markdownIt-Anchor" href="#九-gitignore文件"></a> 九、gitignore文件</h1><h2 id="1需要忽略的文件"><a class="markdownIt-Anchor" href="#1需要忽略的文件"></a> 1.需要忽略的文件</h2><ul><li>系统或软件自动生成的文件</li><li>编译产生的中间文件和结果文件</li><li>运行时生成的日志文件、缓存文件和临时文件</li><li>涉及身份、密码、口令、秘钥等敏感信息文件</li></ul><h2 id="2忽略某个或某类文件"><a class="markdownIt-Anchor" href="#2忽略某个或某类文件"></a> 2.忽略某个或某类文件</h2><ul><li>例：有两个文件log1.log和log2.log，忽略log1.log<ul><li>添加文件.gitignore</li><li>在文件.gitignore中写入“log1.log”</li><li><img src="Pasted-image-20240708234249.png" alt="" /><ul><li>文件log1.log虽然存在于工作区中，但被忽视了，没有添加到暂存区，也就不会被提交到仓库</li></ul></li><li>如果想忽略所有的.log文件，在文件.gitignore中写入*.log即可</li></ul></li><li>注意：如果文件已被添加到版本库，那么忽视无效，需要先删除版本库中的文件</li></ul><h2 id="3忽略文件夹"><a class="markdownIt-Anchor" href="#3忽略文件夹"></a> 3.忽略文件夹</h2><p>在文件.gitignore中写入文件夹名/即可</p><ul><li>例：忽略文件夹temp：<ul><li><img src="Pasted-image-20240709124638.png" alt="" /></li></ul></li><li>忽略后要记得提交</li></ul><h2 id="4匹配规则"><a class="markdownIt-Anchor" href="#4匹配规则"></a> 4.匹配规则</h2><ul><li>对于.gitignore中的规则，从上往下进行忽略</li><li>空行或以#开头的行会被git忽略<ul><li>一般用空行分隔，用#注释</li></ul></li><li>使用标准的Blob模式匹配，例如：<ul><li><ul><li>匹配任意个字符</li></ul></li><li>? 匹配单个字符</li><li>[] 匹配列表中的单个字符<ul><li>\ [abc]表示a或者b或者c</li><li>\ [0-9]表示任意一位数字</li><li>\ [a-z]表示任意一位小写字母</li></ul></li></ul></li><li>** 表示任意匹配的中间目录</li><li>！ 表示取反，例如：<br /><img src="Pasted-image-20240709132037.png" alt="" /></li></ul><h2 id="5直接使用已有的gitignore模版"><a class="markdownIt-Anchor" href="#5直接使用已有的gitignore模版"></a> 5.直接使用已有的.gitignore模版</h2><blockquote><p>[!info] 在github中获取.gitignore模版<br /><a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a></p></blockquote><hr /><h1 id="十-github上的远程仓库"><a class="markdownIt-Anchor" href="#十-github上的远程仓库"></a> 十、Github上的远程仓库</h1><h2 id="1ssh配置"><a class="markdownIt-Anchor" href="#1ssh配置"></a> 1.SSH配置</h2><ul><li>SSH方式的优缺点：<ul><li>规避在push本地代码时验证用户名和密码(HTTPS方式需要)</li><li>但是需要在github上添加SSH公钥配置</li></ul></li><li>配置SSH公钥<ul><li>执行命令<code>cd ~</code>回到根目录</li><li>执行命令<code>cd .ssh</code>进入.ssh目录<ul><li>若报错，需提前在用户文件夹下创建.ssh文件夹</li></ul></li><li>执行命令<code>ssh-keygen -t rsa -b 4096</code>指定生成密钥的协议和大小</li><li>输入秘钥文件名称，之前未配置过可以直接回车，默认生成id_rsa文件<ul><li>如果已配置，创建新的文件名(如tset)</li></ul></li><li>输入密码</li><li>查看本地目录，生成了test和test.pub两个文件<ul><li>文件test是私钥文件，不能给任何人</li><li>文件test.pub是公钥文件，可以上传到github</li></ul></li><li>复制test.pub的内容</li><li>在github中点击 头像 -&gt; settings -&gt; SSH and GPG keys -&gt; New SSH key -&gt; 输入标题 -&gt;粘贴test.pub的内容 -&gt; Add SSH key,成功在github上添加公钥<ul><li>如果在创建SSH时指定了新的文件名，需要创建一个config文件并将下面五行内容添加到文件中，输入命令<code>tail -5 config</code>，意思是访问github时指定使用SSH下的test密钥<img src="Pasted-image-20240710070230.png" alt="" /></li></ul></li><li>然后使用cd命令回到本地仓库，执行命令<code>git clone SSH地址</code>，输入创建密钥时设置的密码</li><li>创建成功，可以使用<code>cd 远程仓库名称</code>的命令进入远程仓库目录</li></ul></li></ul><h2 id="2git-push与git-pull"><a class="markdownIt-Anchor" href="#2git-push与git-pull"></a> 2.git push与git pull</h2><ul><li><code>git push</code>:将本地仓库的内容推送到远程仓库<ul><li>推送前记得将文件提交到本地仓库</li></ul></li><li><code>git pull</code>:默认拉取远程仓库别名为origin的main分支，把远程仓库的指定分支拉取到本地<ul><li><code>git pull</code>命令会进行合并操作，如果本地仓库的修改和远程仓库中的修改有冲突会导致合并失败</li></ul></li></ul><h2 id="3关联本地仓库与远程仓库"><a class="markdownIt-Anchor" href="#3关联本地仓库与远程仓库"></a> 3.关联本地仓库与远程仓库</h2><ul><li>添加远程仓库<ul><li>复制github空仓库下的该命令并粘贴到git中执行<img src="Pasted-image-20240710235337.png" alt="" /></li><li>其中origin是默认的仓库别名</li><li>若报错<code>error: remote origin already exists</code>，需要执行git remote rm origin删除关联的远程仓库，再进行添加</li></ul></li><li>查看当前仓库对应的远程仓库别名和地址<ul><li>执行命令<code>git remote -v</code><img src="Pasted-image-20240710150636.png" alt="" /></li></ul></li><li>指定分支名称<ul><li><img src="Pasted-image-20240710235712.png" alt="" /></li><li>若当前本地仓库分支是main,可跳过</li></ul></li><li>关联本地仓库与远程仓库的main分支<ul><li><img src="Pasted-image-20240710235904.png" alt="" /></li><li>-u是upstream的缩写，表示关联</li></ul></li></ul><hr /><h1 id="十一-gitee与gitlab"><a class="markdownIt-Anchor" href="#十一-gitee与gitlab"></a> 十一、Gitee与Gitlab</h1><h2 id="1特点"><a class="markdownIt-Anchor" href="#1特点"></a> 1.特点</h2><ul><li>Gitee是国内平台，访问速度较高</li><li>Gitlab支持私有化部署，安全性较高</li></ul><h2 id="2gitee"><a class="markdownIt-Anchor" href="#2gitee"></a> 2.Gitee</h2><ul><li>操作基本与github相同，但是创建仓库时需要先设为私有后再公开</li></ul><h2 id="3gitlab"><a class="markdownIt-Anchor" href="#3gitlab"></a> 3.Gitlab</h2><ul><li>略</li></ul><hr /><h1 id="十二-使用ide拓展"><a class="markdownIt-Anchor" href="#十二-使用ide拓展"></a> 十二、使用IDE拓展</h1><ul><li>在vs code的源代码管理器中，被修改并保存的文件会被记录到“更改”中，提供三个操作按钮和一个状态标识<img src="Pasted-image-20240711095545.png" alt="" /><ul><li>前三个按钮分别表示打开文件、取消修改、添加暂存</li><li>最后的M表示已修改(Modified)</li></ul></li><li>可以更方便地暂存、提交和推送</li></ul><hr /><h1 id="十三-分支branch"><a class="markdownIt-Anchor" href="#十三-分支branch"></a> 十三、分支(Branch)</h1><h2 id="1简介应用场景"><a class="markdownIt-Anchor" href="#1简介应用场景"></a> 1.简介＆应用场景</h2><ul><li>分支相当于代码库中的不同版本<ul><li>各分支独立存在，有自己的提交记录</li></ul></li><li>适合用于团队协作和开发管理，提高效率，规避冲突<ul><li>多个开发人员在各自分支上工作，然后合并到一起</li><li>建立问题修复分支处理bug和缺陷，保证主线稳定可用</li></ul></li></ul><h2 id="2基本操作"><a class="markdownIt-Anchor" href="#2基本操作"></a> 2.基本操作</h2><ul><li><code>git branch</code><ul><li>作用：查看当前仓库的所有分支</li><li><code>git checkout -b 分支名</code>：新建一个分支并自动跳转到该分支</li><li><code>git checkout 分支名</code>：切换到已有的分支</li><li><code>git merge 分支名</code>：将要被合并的分支与当前分支合并(提前切换到主分支，命令中的分支名写要被合并的分支名称)</li><li><code>git log --graph -- oneline --decorate --all</code>:查看的分支图</li></ul></li><li>分支合并后不会自动删除，需要手动通过命令删除分支<ul><li>删除已合并的分支：<code>git branch -d 要删除的分支名</code></li><li>强制删除：<code>git branch -D 要删除的分支名</code></li></ul></li></ul><h2 id="3分支合并冲突"><a class="markdownIt-Anchor" href="#3分支合并冲突"></a> 3.分支合并冲突</h2><ul><li>冲突的产生<ul><li>两个分支的修改内容有重复，git无法确定覆盖哪一个修改<ul><li><img src="Git-20240902135407385.png" alt="" /></li></ul></li></ul></li><li>解决办法<ul><li>使用<code>git diff</code>命令查看发生冲突的文件及内容</li><li>手动修改两个文件</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
