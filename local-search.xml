<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/04/11/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <url>/2025/04/11/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一、问题概述"><a href="#一、问题概述" class="headerlink" title="一、问题概述"></a>一、问题概述</h1><p>在 <code>WPF</code> 中，试图通过 <code> NAudio</code> 库实现多音轨音频播放时，程序运行之后不能听到声音。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> NAudio.Wave;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> *** <span class="hljs-comment">// 省略</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MainWindow</span> : <span class="hljs-title">Window</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> AudioManager audioManager = <span class="hljs-keyword">new</span> AudioManager();<br>        <span class="hljs-comment">// 其他部分省略</span><br><br>       <span class="hljs-comment">// 软件启动时，主页窗口初始化</span><br>       <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WindowLoaded</span>(<span class="hljs-params"><span class="hljs-built_in">object</span> sender, RoutedEventArgs e</span>)</span><br>       &#123;<br>           <span class="hljs-comment">// 加载白噪音资源</span><br>           <span class="hljs-keyword">var</span> audioManager = <span class="hljs-keyword">new</span> AudioManager();<br>           audioManager.AddPlayer(<span class="hljs-string">&quot;***&quot;</span>);<br>           audioManager.AddPlayer(<span class="hljs-string">&quot;***&quot;</span>);<br>       &#125;<br><br><span class="hljs-comment">// 音频资源管理</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioManager</span><br>&#123;<br><span class="hljs-keyword">private</span> List&lt;AudioPlayer&gt; _players = <span class="hljs-keyword">new</span> List&lt;AudioPlayer&gt;();<br><span class="hljs-comment">// 添加音源</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddPlayer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath</span>)</span><br>&#123;<br><span class="hljs-keyword">try</span><br>&#123;<br><span class="hljs-keyword">var</span> player = <span class="hljs-keyword">new</span> AudioPlayer(filePath);<br>_players.Add(player);<br>Debug.WriteLine(<span class="hljs-string">$&quot;已添加播放器，当前总数：<span class="hljs-subst">&#123;_players.Count&#125;</span>&quot;</span>);<br>Debug.WriteLine(<span class="hljs-string">$&quot;索引：<span class="hljs-subst">&#123;_players.IndexOf(player)&#125;</span>&quot;</span>);<br>&#125;<br><span class="hljs-keyword">catch</span> (Exception ex)<br>&#123;<br>Debug.WriteLine(<span class="hljs-string">$&quot;添加播放器失败: <span class="hljs-subst">&#123;ex.Message&#125;</span>&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 整体播放</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">PlayAll</span>()</span><br>&#123;<br>Debug.WriteLine(<span class="hljs-string">$&quot;PlayAll 调用时列表长度: <span class="hljs-subst">&#123;_players.Count&#125;</span>&quot;</span>); <span class="hljs-comment">// 新增日志</span><br><span class="hljs-built_in">int</span> Cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> player <span class="hljs-keyword">in</span> _players)<br>&#123;<br>player.Play();<br>Cnt++;<br>&#125;<br>Debug.WriteLine(<span class="hljs-string">$&quot;已播放所有音源，总数：<span class="hljs-subst">&#123;Cnt&#125;</span>&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioPlayer</span><br>&#123;<br><span class="hljs-keyword">private</span> WaveOutEvent _waveOut;<br><span class="hljs-keyword">private</span> AudioFileReader _audioFile;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AudioPlayer</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filePath</span>)</span><br>&#123;<br>_audioFile = <span class="hljs-keyword">new</span> AudioFileReader(filePath);<br>_waveOut = <span class="hljs-keyword">new</span> WaveOutEvent();<br>_waveOut.Init(_audioFile);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Play</span>()</span> =&gt; _waveOut.Play();<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Pause</span>()</span> =&gt; _waveOut.Pause();<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Stop</span>()</span> =&gt; _waveOut.Stop();<br><span class="hljs-keyword">public</span> <span class="hljs-built_in">float</span> Volume<br>&#123;<br><span class="hljs-keyword">get</span> =&gt; _audioFile.Volume;<br><span class="hljs-keyword">set</span> =&gt; _audioFile.Volume = <span class="hljs-keyword">value</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>通过 <code>Debug.WriteLine</code> 方法输出的调试信息：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">已添加播放器，当前总数：1</span><br><span class="hljs-attribute">索引：0</span><br><span class="hljs-attribute">已添加播放器，当前总数：2</span><br><span class="hljs-attribute">索引：1</span><br><span class="hljs-attribute">PlayAll 调用时列表长度</span><span class="hljs-punctuation">:</span> <span class="hljs-string">0</span><br>已播放所有音源，总数：0<br></code></pre></td></tr></table></figure><p>发现在添加了两个文件的情况下，调用<code>PlayAll</code>时列表长度却是<code>0</code>而不是预期的<code>2</code>。此前，在使用如下方法播放单个音频时：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AudioManager</span><br>&#123;<br><span class="hljs-comment">//其他方法同上</span><br><span class="hljs-comment">// 独立播放</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Play</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> index</span>)</span><br>&#123;<br>_players[index].Play();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后通过<code>audioManager.Play(0)</code>播放列表的第一个音频文件时，编译器报错：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">System.ArgumentOutOfRangeException:“<span class="hljs-built_in">Index</span> was <span class="hljs-keyword">out</span> of <span class="hljs-built_in">range</span>. Must be non-negative and less than the <span class="hljs-built_in">size</span> of the collection. ”<br></code></pre></td></tr></table></figure><p>即索引超出列表范围，一度让我百思不得其解……</p><hr><h1 id="二、寻找原因"><a href="#二、寻找原因" class="headerlink" title="二、寻找原因"></a>二、寻找原因</h1><p>询问AI后，提示我问题很可能出在 <strong><code>_players</code> 列表未被正确填充</strong>，导致 <code>PlayAll()</code> 循环时列表为空(这也与我的预期相符)，并给出如下检查思路：</p><ol><li> <strong>确认 <code>AddPlayer</code> 方法是否被正确调用</strong></li><li><strong>检查 <code>AudioPlayer</code> 构造函数是否失败</strong></li><li><strong>确认 <code>_players</code> 列表的作用域和生命周期</strong></li><li>&#x3D;&#x3D;<strong>检查<code>AudioManager</code>实例是否唯一</strong>&#x3D;&#x3D;</li><li><strong>验证文件路径和权限</strong></li></ol><ul><li>最开始我考虑了文件加载失败的情况，但是在尝试了使用绝对路径以及将属性修改为资源或者内容之后，没有报告找不到文件的错误，似乎可以排除这种情况。</li><li>然后我想到是不是有可能多次初始化了<code>_players</code>列表，导致其意外清空？<ul><li>查找代码中出现<code>_players</code>的语句，似乎只有一次初始化，可以排除这种情况。</li><li><img src="/2025/04/11/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/%E6%9C%AA%E5%91%BD%E5%90%8D-20250205124929280.png"></li></ul></li><li>最后我突然想到，在页面初始化时似乎将<code>AudioManager</code>类实例化了一次，但是在后面的代码中好像也看到了类似的<code>new</code>语句，是不是多次实例化了<code>AudioManager</code>呢？<ul><li>查找代码中的<code>new AudioManager()</code>语句，果然查到了两次：</li><li><img src="/2025/04/11/%E9%9F%B3%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%9A%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E4%B8%8E%E7%B1%BB%E5%AD%97%E6%AE%B5%E7%9A%84%E6%B7%B7%E6%B7%86%E5%92%8C%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98/%E6%9C%AA%E5%91%BD%E5%90%8D-20250205125110116.png"><blockquote><p>[!INFO] 根据上述分析，问题出现在多次实例化<code>AudioManager</code>类:</p><ol><li>在<code>MainWindow</code>类中，实例化了一次，在这里是一个类字段，属于 <code>MainWindow</code> 类的成员变量，生命周期与 <code>MainWindow</code> 实例相同。</li><li>在<code>WindowLoaded</code>事件中，又实例化了一次。在这里是一个局部变量 <code>audioManager</code>，它的作用域仅限于该方法内部。当方法执行完毕后，局部变量会被销毁。</li></ol></blockquote></li></ul></li></ul><blockquote><p>诊断结果：<strong>对 <code>audioManager</code> 的添加和读取操作不是同一个对象</strong>。</p></blockquote><ul><li>具体解释：<ul><li>在 <code>WindowLoaded</code> 方法中调用 <code>AddPlayer</code> 时，操作的是局部变量 <code>audioManager</code>。</li><li>尝试在其他地方（如按钮点击事件）调用 <code>PlayAll</code> 时，操作的是类字段的 <code>audioManager</code>。</li><li>由于局部变量和类字段是两个不同的对象，局部变量中添加的音源不会影响类字段的 <code>audioManager</code>，因此 <code>PlayAll</code> 时列表为空，无法播放。</li></ul></li></ul><hr><h1 id="三、解决问题"><a href="#三、解决问题" class="headerlink" title="三、解决问题"></a>三、解决问题</h1><p>删去<code>WindowLoaded</code>中的局部变量，直接使用生命周期更长的类字段，程序运行之后成功输出了音频。</p><hr><h1 id="四、反思总结"><a href="#四、反思总结" class="headerlink" title="四、反思总结"></a>四、反思总结</h1><p><strong>关键陷阱：局部变量覆盖类字段</strong></p><blockquote><p>在 C# 中，如果方法内部声明了一个与类字段同名的局部变量，编译器会优先使用局部变量，导致类字段被“隐藏”。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">private</span> AudioManager audioManager = <span class="hljs-keyword">new</span> AudioManager();<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SomeMethod</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> audioManager = <span class="hljs-keyword">new</span> AudioManager(); <span class="hljs-comment">// 这里实际是一个局部变量</span><br>    audioManager.AddPlayer(<span class="hljs-string">&quot;xxx&quot;</span>);         <span class="hljs-comment">// 操作的是局部变量，而非类字段</span><br>&#125;<br></code></pre></td></tr></table></figure><p>直接使用类字段，可以确保所有操作都作用于同一个 <code>AudioManager</code> 实例，从而解决播放失败的问题。</p><blockquote><p>[!NOTE]- 局部变量＆类字段：如何进行取舍？</p><ul><li>![[音频无法播放：局部变量与类字段的混淆和滥用问题-20250205132505196.png|622]] </li><li>使用类字段：<ul><li>数据需要长期存在：变量需要在整个类的生命周期内保持状态，或在多个方法间共享。</li><li>资源需要全局访问：某些对象（如数据库连接、网络客户端）需要被多个方法重复使用。</li><li>需要维护对象状态：对象的状态（如播放进度、配置参数）需要在多次调用中持续更新。</li></ul></li><li>使用局部变量：<ul><li>临时计算或中间结果：变量仅在一次方法调用中临时使用，无需长期保存。</li><li>避免副作用：希望方法的行为纯粹，不依赖或修改类的状态。</li><li>限制作用域以提高安全性：防止变量被意外修改（如敏感数据）。</li></ul></li></ul></blockquote><p>反思：出现这样的问题，主要在于对面向对象编程的认识和经验不足，对面向过程变成有较大的惯性思维，习惯将初始化操作写在页面加载的事件中。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JSON保存设置项异常复原问题</title>
    <link href="/2025/02/10/JSON%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E9%A1%B9%E5%BC%82%E5%B8%B8%E5%A4%8D%E5%8E%9F%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/10/JSON%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E9%A1%B9%E5%BC%82%E5%B8%B8%E5%A4%8D%E5%8E%9F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一、问题概述："><a href="#一、问题概述：" class="headerlink" title="一、问题概述："></a>一、问题概述：</h1><p>在WPF项目中新建了文件Settings.json，用于保存开机自启动的设置记录，并将其属性设置为“内容–始终复制”以将JSON文件添加到项目文件夹中。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;AutoStartEnabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>定义了下面的方法来载入设置的内容：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LoadSettings</span>()</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (File.Exists(SettingsFilePath))<br>    &#123;<br>        <span class="hljs-built_in">string</span> json = File.ReadAllText(SettingsFilePath);<br>        <span class="hljs-built_in">dynamic</span> settings = JsonConvert.DeserializeObject(json);<br>        AutoStartEnabled = settings.AutoStartEnabled;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-comment">// 如果文件不存在，初始化默认设置</span><br>        AutoStartEnabled = <span class="hljs-literal">false</span>;<br>    &#125;   <br>&#125;<br></code></pre></td></tr></table></figure><ul><li>运行程序，发现每次启动时，通过UI反馈的记录均为False，即使手动修改为True也会在运行的一瞬间变成False。</li></ul><hr><h1 id="二、寻找原因："><a href="#二、寻找原因：" class="headerlink" title="二、寻找原因："></a>二、寻找原因：</h1><ul><li>手动修改为True扔不起效，可排除保存记录异常的情况。</li><li>怀疑是UI控件初始属性为False导致，查找之后未发现异常。</li><li>通过断点追踪，发现在程序读取JSON文件内容之前就已经变成了false。</li><li>又怀疑是程序在初始化时触发了按钮的取消选中事件，但未触发断点，可以排除。</li><li>这时突然想起“内容–始终复制”的属性，问题原因终于找到了。</li></ul><hr><h1 id="三、问题复现"><a href="#三、问题复现" class="headerlink" title="三、问题复现"></a>三、问题复现</h1><ul><li>选中按钮后，修改JSON中”AutoStartEnabled”的值为True。</li><li>再次启动程序时，“始终复制”的属性使得开发环境中的Settings.json复制到编译后的程序所在的文件夹，将修改了的Json文件覆盖，造成属性异常变成False的假象。</li></ul><hr><h1 id="四、解决问题"><a href="#四、解决问题" class="headerlink" title="四、解决问题"></a>四、解决问题</h1><ul><li>直接从源头解决问题，将开发环境中的json文件删除，杜绝文件被覆盖的可能性。</li><li>经过测试，现有方法支持在未找到json文件时创建文件，因此不需添加新建Json文件的程序。</li></ul><hr><h1 id="五、回顾反思"><a href="#五、回顾反思" class="headerlink" title="五、回顾反思"></a>五、回顾反思</h1><ul><li>通过测试发现，直接从文件夹启动编译后的程序不会出现覆盖的问题，证实了前面的分析。</li><li>能被这种小问题困扰如此之久，反映出自己对开发工具的不熟悉和思维深度的不足，也提示自己要通过积极寻找问题来积累自己的经验。</li></ul>]]></content>
    
    
    <categories>
      
      <category>踩坑记录</category>
      
      <category>WPF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Visual Studio</tag>
      
      <tag>WPF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OBS Studio录屏声音异常发闷问题</title>
    <link href="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<hr><p>在使用OBS进行录屏时，发现声音失真发闷现象很严重。<br>上网查询，得到以下原因及解决方案，建议逐个排查：</p><h2 id="1-输入设备选择了蓝牙耳机，耳机使用麦克风录音导致音质变差"><a href="#1-输入设备选择了蓝牙耳机，耳机使用麦克风录音导致音质变差" class="headerlink" title="1.输入设备选择了蓝牙耳机，耳机使用麦克风录音导致音质变差"></a>1.输入设备选择了蓝牙耳机，耳机使用麦克风录音导致音质变差</h2><p>原贴链接：<a href="https://www.zhihu.com/question/340185115">打开 OBS Studio 后播放音乐音质差如何解决？-知乎</a><br>解决方案：将输入设备全部禁用，或者留一个电脑自带的麦克风阵列</p><p><img src="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205223911572.png"></p><hr><h2 id="2-系统扬声器开启了音频增益"><a href="#2-系统扬声器开启了音频增益" class="headerlink" title="2. 系统扬声器开启了音频增益"></a>2. 系统扬声器开启了音频增益</h2><p>原贴链接：<a href="https://www.bilibili.com/opus/827471891323158578">[首发] OBS音频很闷得慌的解决办法 -哔哩哔哩</a><br>解决方案：关闭音频增益</p><p><img src="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224201021.png"></p><hr><h2 id="3-开启了杜比音效"><a href="#3-开启了杜比音效" class="headerlink" title="3.开启了杜比音效"></a>3.开启了杜比音效</h2><p>原帖链接:<a href="https://blog.lifewith.fun/zh-cn/">为什么OBS录制视频的声音发闷 -MystCastle的博客</a><br>解决方案：关闭杜比音效<br><img src="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224514227.png"></p><hr><h2 id="4-默认输入设备和通信设备不正确"><a href="#4-默认输入设备和通信设备不正确" class="headerlink" title="4.默认输入设备和通信设备不正确"></a>4.默认输入设备和通信设备不正确</h2><p>看评论区有人说要把默认的输入设备和通信设备都换成麦克风阵列，不能用蓝牙耳机<br>解决方案：<br><img src="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205224858254.png"><br><img src="/2025/02/05/OBS%20Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%BC%82%E5%B8%B8%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98/OBS-Studio%E5%BD%95%E5%B1%8F%E5%A3%B0%E9%9F%B3%E5%8F%91%E9%97%B7%E9%97%AE%E9%A2%98-20250205225019769.png"><br>在我的电脑上，进行到这一步时，声音基本与关闭OBS时一致，失真发闷问题得到解决。</p>]]></content>
    
    
    <categories>
      
      <category>踩坑记录</category>
      
      <category>OBS studio</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OBS Studio</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
